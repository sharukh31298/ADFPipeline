{
	"name": "DS_DatasetRefreshes_UAT",
	"properties": {
		"activities": [
			{
				"name": "Get Datasets",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Dataset_batch] \nwhere BatchNo = ',string(pipeline().parameters.BatchNo),\n'AND TenantId = ',string(pipeline().parameters.TenantId))",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DatasetLive_sql_UAT",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "DatasetID in Loop",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Datasets",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Datasets').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"batchCount": 50,
					"activities": [
						{
							"name": "Get DatasetRefreshes_Staging",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "WorkspaceID",
											"value": {
												"value": "@item().WorkspaceId",
												"type": "Expression"
											}
										},
										{
											"name": "DatasetID",
											"value": {
												"value": "@item().DatasetSourceKey",
												"type": "Expression"
											}
										},
										{
											"name": "TenantId",
											"value": {
												"value": "@pipeline().parameters.TenantID",
												"type": "Expression"
											}
										}
									],
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": [
											"DatasetRefreshesSourceKey"
										]
									},
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": 4,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['requestId']"
											},
											"sink": {
												"name": "RequestId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "DatasetRefreshesSourceKey",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['refreshType']"
											},
											"sink": {
												"name": "RefreshType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['startTime']"
											},
											"sink": {
												"name": "StartTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "['endTime']"
											},
											"sink": {
												"name": "EndTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['WorkspaceID']"
											},
											"sink": {
												"name": "WorkSpaceID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['DatasetID']"
											},
											"sink": {
												"name": "DatasetID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['TenantId']"
											},
											"sink": {
												"name": "TenantId",
												"type": "Int32"
											}
										}
									],
									"collectionReference": "$['value']",
									"mapComplexValuesToString": true
								}
							},
							"inputs": [
								{
									"referenceName": "DatasetRefreshes_API",
									"type": "DatasetReference",
									"parameters": {
										"WorkSpaceID": {
											"value": "@item().WorkspaceId",
											"type": "Expression"
										},
										"DatasetID": {
											"value": "@item().DatasetSourceKey",
											"type": "Expression"
										},
										"AppTenantId": {
											"value": "@pipeline().parameters.AppTenantId",
											"type": "Expression"
										},
										"AppClientId": {
											"value": "@pipeline().parameters.AppClientId",
											"type": "Expression"
										},
										"AppClientCode": {
											"value": "@pipeline().parameters.AppClientCode",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DatasetRefreshesStaging_sql_UAT",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Capturing DatasetRefreshes Staging Status",
							"type": "SetVariable",
							"dependsOn": [
								{
									"activity": "Get DatasetRefreshes_Staging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"variableName": "pipelineReturnValue",
								"value": [
									{
										"key": "Dataset Refreshes Staging Status",
										"value": {
											"type": "Expression",
											"content": "@activity('Get DatasetRefreshes_Staging').Status"
										}
									}
								],
								"setSystemVariable": true
							}
						},
						{
							"name": "Capturing DatasetRefreshes ED",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Get DatasetRefreshes_Staging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[Sp_DatasetRefrehesED]",
								"storedProcedureParameters": {
									"AppClientId": {
										"value": {
											"value": "@pipeline().parameters.AppClientId",
											"type": "Expression"
										},
										"type": "String"
									},
									"AppClientSecret": {
										"value": {
											"value": "@pipeline().parameters.AppClientCode",
											"type": "Expression"
										},
										"type": "String"
									},
									"AppTentantId": {
										"value": {
											"value": "@pipeline().parameters.AppTenantId",
											"type": "Expression"
										},
										"type": "String"
									},
									"DataLoadTrackerId": {
										"value": "",
										"type": "String"
									},
									"DatasetID": {
										"value": {
											"value": "@item().DatasetSourceKey",
											"type": "Expression"
										},
										"type": "String"
									},
									"ErrorMessage": {
										"value": {
											"value": "@activity('Get DatasetRefreshes_Staging').error?.message",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineName": {
										"value": {
											"value": "@pipeline().Pipeline",
											"type": "Expression"
										},
										"type": "String"
									},
									"PipelineRunId": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "String"
									},
									"ProcessEndTime": {
										"value": {
											"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"ProcessStartTime": {
										"value": {
											"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"Status": {
										"value": {
											"value": "@activity('Get DatasetRefreshes_Staging').Status",
											"type": "Expression"
										},
										"type": "String"
									},
									"TenantId": {
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"WorkSpaceID": {
										"value": {
											"value": "@item().WorkspaceId",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "DatasetRefreshes_log_UAT",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "Sp_TrackProcessSuccess",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogADF_PipelineExecution]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ErrorMessage": {
							"value": "NA",
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Status": {
							"value": {
								"value": "@if(and(and(and(and(\nequals(variables('Get DatasetRefreshes Status'),'Succeeded'),\nequals(variables('Dataset Refreshes Staging Status'),'Succeeded')),\nequals(variables('DatasetRefreshes Live Status'),'Succeeded')),\nequals(variables('Get DatasetRefreshes Status'),'Succeeded')),\nequals(variables('DatasetRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						},
						"TenantID": {
							"value": {
								"value": "@pipeline().parameters.TenantID",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ADF_Pipeline_Status_Log",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Sp_TrackProcessFailure",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogADF_PipelineExecution]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"ErrorMessage": {
							"value": null,
							"type": "String"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Status": {
							"value": null,
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ADF_Pipeline_Status_Log",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Capturing Get Datasetsrefreshes Status",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get Datasets",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pipelineReturnValue",
					"value": [
						{
							"key": "Get DatasetRefreshe Status",
							"value": {
								"type": "Expression",
								"content": "@activity('Get Datasets').Status"
							}
						}
					],
					"setSystemVariable": true
				}
			},
			{
				"name": "Get DatasetRefreshes_Live",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "DatasetID in Loop",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "upsert",
						"upsertSettings": {
							"useTempDB": true,
							"keys": [
								"DatasetRefreshesSourceKey"
							]
						},
						"sqlWriterUseTableLock": false,
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"dataIntegrationUnits": 4,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"name": "DatasetRefreshesSourceKey",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DatasetRefreshesSourceKey",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "WorkSpaceID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "WorkSpaceID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "DatasetID",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "DatasetID",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "RefreshType",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "RefreshType",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "StartTime",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "StartTime",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "EndTime",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "EndTime",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "RequestId",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "RequestId",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "Status",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "Status",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "CreatedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "CreatedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								},
								"sink": {
									"name": "ModifiedDate",
									"type": "DateTime",
									"physicalType": "datetime"
								}
							},
							{
								"source": {
									"name": "CreatedBy",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "CreatedBy",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "ModifiedBy",
									"type": "String",
									"physicalType": "varchar"
								},
								"sink": {
									"name": "ModifiedBy",
									"type": "String",
									"physicalType": "varchar"
								}
							},
							{
								"source": {
									"name": "TenantId",
									"type": "Int32",
									"physicalType": "int"
								},
								"sink": {
									"name": "TenantId",
									"type": "Int32",
									"physicalType": "int"
								}
							}
						],
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SQL_DatasetRefreshesLive_Staging",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "SQl_DatasetRefreshesLive",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Capturing DatasetRefreshes Live Status",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Get DatasetRefreshes_Live",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "pipelineReturnValue",
					"value": [
						{
							"key": "DatasetRefreshes Live Status",
							"value": {
								"type": "Expression",
								"content": "@activity('Get DatasetRefreshes_Live').Status"
							}
						}
					],
					"setSystemVariable": true
				}
			},
			{
				"name": "InsertUpdate Datasetrefreshes",
				"type": "Script",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "Insertupdate_DatasetRefreshes_UAT",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "EXEC DatasetRefreshes_InsertUpsert;"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"parameters": {
			"AppTenantId": {
				"type": "string"
			},
			"AppClientId": {
				"type": "string"
			},
			"AppClientCode": {
				"type": "string"
			},
			"TenantID": {
				"type": "int"
			},
			"BatchNo": {
				"type": "string",
				"defaultValue": "@item().BatchNo"
			}
		},
		"variables": {
			"DatasetsRefreshes_status": {
				"type": "String"
			},
			"DatasetsRefreshes_StartTime": {
				"type": "String"
			},
			"DatasetsRefreshes_EndTime": {
				"type": "String"
			},
			"DatasetsRefreshes_IST": {
				"type": "String"
			},
			"DatasetsRefreshes_IST2": {
				"type": "String"
			},
			"Dataset staging Status": {
				"type": "String"
			},
			"Dataset Live Status": {
				"type": "String"
			},
			"Dataset History Status": {
				"type": "String"
			},
			"Get DatasetRefreshes Status": {
				"type": "String"
			},
			"Get DatasetsRefreshes Batch Status": {
				"type": "String"
			},
			"DatasetRefreshes History Status": {
				"type": "String"
			},
			"Dataflows Staging Status": {
				"type": "String"
			},
			"Dataflows Live Status": {
				"type": "String"
			},
			"Dataflows History Status": {
				"type": "String"
			},
			"Get Dataflowsrefreshes Status": {
				"type": "String"
			},
			"Get Dataflowsrefreshes Batch": {
				"type": "String"
			},
			"DataflowRefreshes History Status": {
				"type": "String"
			},
			"Master Workspaces Status": {
				"type": "String"
			},
			"Master WorkSpaceUsers Status": {
				"type": "String"
			},
			"Master Report status": {
				"type": "String"
			},
			"Master ReportPages Status": {
				"type": "String"
			},
			"Master Datasets Status": {
				"type": "String"
			},
			"Master Datasetfreshes status": {
				"type": "String"
			},
			"Master Datasetusers Status": {
				"type": "String"
			},
			"Master Viewreports Status": {
				"type": "String"
			},
			"Master Dataflows Status": {
				"type": "String"
			},
			"Master DataflowRefreshes Status": {
				"type": "String"
			},
			"Get DatasetRefreshes_ Status": {
				"type": "String"
			},
			"Get DatasetRefreshe Status": {
				"type": "String"
			},
			"Get DatasetsRefreshes Status": {
				"type": "String"
			},
			"DataflowRefreshesLive Status": {
				"type": "String"
			}
		},
		"folder": {
			"name": "UAT_DailyScheduleChildPipelines"
		},
		"annotations": []
	}
}