{
	"name": "WorkSpacesUsers_Batch",
	"properties": {
		"activities": [
			{
				"name": "Get WorkSpace Batches",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select distinct BatchNo from [dbo].[Workspaces_batch]\n",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "WorkSpaceUsers_SQL",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "For Each Batch",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Truncate workspace users",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get WorkSpace Batches').output.value",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "Get WorkSpaces",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces_batch] where BatchNo=',item())",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"dataset": {
									"referenceName": "WorkSpaces_SQL",
									"type": "DatasetReference"
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "WorkSpace ID in Loop",
							"type": "ForEach",
							"dependsOn": [
								{
									"activity": "Get WorkSpaces",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"items": {
									"value": "@activity('Get WorkSpaces').output.value",
									"type": "Expression"
								},
								"isSequential": false,
								"batchCount": 50,
								"activities": [
									{
										"name": "Get WorkSpace Users",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 2,
											"retryIntervalInSeconds": 60,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "RestSource",
												"additionalColumns": [
													{
														"name": "WorkSpaceID",
														"value": {
															"value": "@item().WorkSpaceSourceKey",
															"type": "Expression"
														}
													}
												],
												"httpRequestTimeout": "00:01:40",
												"requestInterval": "00.00:00:00.010",
												"requestMethod": "GET",
												"paginationRules": {
													"supportRFC5988": "true"
												}
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false,
												"disableMetricsCollection": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"path": "['emailAddress']"
														},
														"sink": {
															"name": "EmailAddress",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['groupUserAccessRight']"
														},
														"sink": {
															"name": "GroupUserAccessRight",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['displayName']"
														},
														"sink": {
															"name": "UserName",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['identifier']"
														},
														"sink": {
															"name": "Identifier",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['principalType']"
														},
														"sink": {
															"name": "PrincipalType",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['graphId']"
														},
														"sink": {
															"name": "WorkSpaceUserSourceKey",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "['userType']"
														},
														"sink": {
															"name": "UserType",
															"type": "String"
														}
													},
													{
														"source": {
															"path": "$['WorkSpaceID']"
														},
														"sink": {
															"name": "WorkSpaceID",
															"type": "String"
														}
													}
												],
												"collectionReference": "$['value']",
												"mapComplexValuesToString": true
											}
										},
										"inputs": [
											{
												"referenceName": "WorkSpaceUsers_API",
												"type": "DatasetReference",
												"parameters": {
													"WorkSpaceID": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "WorkSpaceUsers_SQL",
												"type": "DatasetReference"
											}
										]
									}
								]
							}
						},
						{
							"name": "If not max batch",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "WorkSpace ID in Loop",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@less(item(),activity('Get WorkSpace Batches').output.count)",
									"type": "Expression"
								},
								"ifTrueActivities": [
									{
										"name": "Wait 1 Hour",
										"type": "Wait",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"waitTimeInSeconds": 3600
										}
									}
								]
							}
						}
					]
				}
			},
			{
				"name": "Truncate workspace users",
				"type": "Script",
				"dependsOn": [
					{
						"activity": "Get WorkSpace Batches",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "TRUNCATE TABLE [dbo].[WorkSpaceUsers];"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"variables": {
			"CountWorkspace": {
				"type": "Integer"
			}
		},
		"annotations": [],
		"lastPublishTime": "2023-11-29T06:27:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}