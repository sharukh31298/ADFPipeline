{
	"name": "pipeline1",
	"properties": {
		"activities": [
			{
				"name": "Test_Workspaces",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "WorkSpaceSourceKey",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['isReadOnly']"
								},
								"sink": {
									"name": "IsReadOnly",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['isOnDedicatedCapacity']"
								},
								"sink": {
									"name": "IsonDedicatedCapacity",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['capacityMigrationStatus']"
								},
								"sink": {
									"name": "CapacityMigrationStatus",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['type']"
								},
								"sink": {
									"name": "WorkSpaceType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['state']"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['hasWorkspaceLevelSettings ']"
								},
								"sink": {
									"name": "HasWorkspaceLevelSetting",
									"type": "Boolean"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "WorkSpaceName",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['value']"
					}
				},
				"inputs": [
					{
						"referenceName": "Rest_Workspaces",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "Azure_Sql",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "Storedprocedure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Test_Workspaces",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[usp_LogADF_PipelineExecution]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"PipelineName": {
							"value": {
								"value": "@pipeline().Pipeline",
								"type": "Expression"
							},
							"type": "String"
						},
						"RunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "String"
						},
						"StartTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"Status": {
							"value": {
								"value": "@activity('Test_Workspaces').Status",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerName": {
							"value": {
								"value": "@pipeline().TriggerName",
								"type": "Expression"
							},
							"type": "String"
						},
						"TriggerTime": {
							"value": {
								"value": "@pipeline().TriggerTime",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"TriggerType": {
							"value": {
								"value": "@pipeline().TriggerType",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ADF_Pipeline_Status_Log",
					"type": "LinkedServiceReference"
				}
			}
		],
		"annotations": []
	}
}