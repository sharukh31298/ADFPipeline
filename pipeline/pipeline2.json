{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "exec [dbo].[DataLoadTrack_Insert] \"9049e040-2bf1-47a2-ad39-e23869af08ff\",\"3a8df53a-9873-4e70-9d69-4725460c62b8\"\n,\"N9e8Q~NRLsIYTg2832J3f38T~qAwIhy3a.QTya_~\",\"53aad6f3-7954-47a2-8474-8d2f1c9ddcdc\", \"2024-12-18 11:59:48.313\",null,\n\"Started\",\"Started\",\"True\",\"Application\",null,null,'22',''",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSQL_SP",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Execute_SP",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSQL_SP",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "a",
					"value": {
						"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [
					{
						"activity": "Wait1",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_ChildPipelineLog_Update]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"LogTrackerID": {
							"value": {
								"value": "@activity('Execute_SP').output.firstRow.LogTrackerID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": {
								"value": "@activity('Execute_SP').Status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Execute_ChildPipelineLogs",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"dependsOn": [
					{
						"activity": "Execute_SP",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 2
				}
			}
		],
		"parameters": {
			"TenantId": {
				"type": "string",
				"defaultValue": "22"
			},
			"AppTenantId": {
				"type": "String"
			},
			"AppClientId": {
				"type": "String"
			},
			"AppClientCode": {
				"type": "String"
			}
		},
		"variables": {
			"a": {
				"type": "String"
			}
		},
		"annotations": []
	}
}