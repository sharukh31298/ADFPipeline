{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Execute_SP",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select AppTentantId,AppClientId,AppClientSecret,TentantId from [dbo].[DataLoadTracker]",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_lookupClientInformation",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Execute_SP",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Execute_SP').output.value",
						"type": "Expression"
					},
					"batchCount": 50,
					"activities": [
						{
							"name": "Workaround",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "WorkSpaceSourceKey",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['isReadOnly']"
											},
											"sink": {
												"name": "IsReadOnly",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['isOnDedicatedCapacity']"
											},
											"sink": {
												"name": "IsonDedicatedCapacity",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['capacityMigrationStatus']"
											},
											"sink": {
												"name": "CapacityMigrationStatus",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['description']"
											},
											"sink": {
												"name": "WorkSpaceDescription",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['type']"
											},
											"sink": {
												"name": "WorkSpaceType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['state']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['hasWorkspaceLevelSettings ']"
											},
											"sink": {
												"name": "HasWorkspaceLevelSetting",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "WorkSpaceName",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['value']"
								}
							},
							"inputs": [
								{
									"referenceName": "Ls_API_Workspaces",
									"type": "DatasetReference",
									"parameters": {
										"AppTentantId": {
											"value": "@item().AppTentantId",
											"type": "Expression"
										},
										"AppClientId": {
											"value": "@item().AppClientId",
											"type": "Expression"
										},
										"AppClientCode": {
											"value": "@item().AppClientSecret",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "LS_SQL_Workspaces",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"a": {
				"type": "String"
			}
		},
		"annotations": []
	}
}