{
	"name": "pipeline2",
	"properties": {
		"activities": [
			{
				"name": "Lookup1",
				"type": "Lookup",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "exec [dbo].[DataLoadTrack_Insert] \"9049e040-2bf1-47a2-ad39-e23869af08ff\",\"3a8df53a-9873-4e70-9d69-4725460c62b8\"\n,\"N9e8Q~NRLsIYTg2832J3f38T~qAwIhy3a.QTya_~\",\"53aad6f3-7954-47a2-8474-8d2f1c9ddcdc\", \"2024-12-18 11:59:48.313\",null,\n\"Started\",\"Started\",\"True\",\"Application\",null,null,'22',''",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "AzureSQL_SP",
						"type": "DatasetReference"
					}
				}
			},
			{
				"name": "Execute_SP",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select AppTentantId,AppClientId,AppClientSecret,TentantId from [dbo].[DataLoadTracker]",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_lookupClientInformation",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Set variable1",
				"type": "SetVariable",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "a",
					"value": {
						"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Stored procedure1",
				"type": "SqlServerStoredProcedure",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[sp_ChildPipelineLog_Update]",
					"storedProcedureParameters": {
						"EndTime": {
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"LogTrackerID": {
							"value": {
								"value": "@activity('Execute_SP').output.firstRow.LogTrackerID",
								"type": "Expression"
							},
							"type": "String"
						},
						"Status": {
							"value": {
								"value": "@activity('Execute_SP').Status",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Execute_ChildPipelineLogs",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "Wait1",
				"type": "Wait",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"waitTimeInSeconds": 2
				}
			},
			{
				"name": "Demo_Workspaces",
				"type": "Copy",
				"state": "Inactive",
				"onInactiveMarkAs": "Succeeded",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "RestSource",
						"httpRequestTimeout": "00:01:40",
						"requestInterval": "00.00:00:00.010",
						"requestMethod": "GET",
						"paginationRules": {
							"supportRFC5988": "true"
						}
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"mappings": [
							{
								"source": {
									"path": "['id']"
								},
								"sink": {
									"name": "DatasetID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['name']"
								},
								"sink": {
									"name": "DatasetName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['kind']"
								},
								"sink": {
									"name": "Kind",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['capacity']['id']"
								},
								"sink": {
									"name": "capacityId",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['capacity']['displayName']"
								},
								"sink": {
									"name": "capacitydisplayName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['capacity']['sku']"
								},
								"sink": {
									"name": "capacitydisplaysku",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['group']['id']"
								},
								"sink": {
									"name": "WorkSpaceID",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['group']['name']"
								},
								"sink": {
									"name": "WorkspaceName",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "['configuredBy'][0]"
								},
								"sink": {
									"name": "configuredBy",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastRefresh']['id']"
								},
								"sink": {
									"name": "DatasetRefreshesSourceKey",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastRefresh']['refreshType']"
								},
								"sink": {
									"name": "RefreshType",
									"type": "String"
								}
							},
							{
								"source": {
									"path": "$['lastRefresh']['startTime']"
								},
								"sink": {
									"name": "StartTime",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['lastRefresh']['endTime']"
								},
								"sink": {
									"name": "EndTime",
									"type": "DateTime"
								}
							},
							{
								"source": {
									"path": "$['lastRefresh']['status']"
								},
								"sink": {
									"name": "Status",
									"type": "String"
								}
							}
						],
						"collectionReference": "$['value']"
					}
				},
				"inputs": [
					{
						"referenceName": "Ls_API_Workspaces",
						"type": "DatasetReference",
						"parameters": {
							"AppTentantId": {
								"value": "@pipeline().parameters.AppTentantId",
								"type": "Expression"
							},
							"AppClientId": {
								"value": "@pipeline().parameters.AppClientId",
								"type": "Expression"
							},
							"AppClientSecret": {
								"value": "@pipeline().parameters.AppClientSecret",
								"type": "Expression"
							}
						}
					}
				],
				"outputs": [
					{
						"referenceName": "LS_SQL_Workspaces",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Execute_SP",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Execute_SP').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Demo",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "DatasetID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "DatasetName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['kind']"
											},
											"sink": {
												"name": "Kind",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['id']"
											},
											"sink": {
												"name": "capacityId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['displayName']"
											},
											"sink": {
												"name": "capacitydisplayName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['sku']"
											},
											"sink": {
												"name": "capacitydisplaysku",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['group']['id']"
											},
											"sink": {
												"name": "WorkSpaceID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['group']['name']"
											},
											"sink": {
												"name": "WorkspaceName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['configuredBy'][0]"
											},
											"sink": {
												"name": "configuredBy",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['id']"
											},
											"sink": {
												"name": "DatasetRefreshesSourceKey",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['refreshType']"
											},
											"sink": {
												"name": "RefreshType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['startTime']"
											},
											"sink": {
												"name": "StartTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['endTime']"
											},
											"sink": {
												"name": "EndTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['value']"
								}
							},
							"inputs": [
								{
									"referenceName": "Ls_API_Workspaces",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "LS_SQL_Workspaces",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "WorkSpace Staging",
							"type": "Copy",
							"state": "Inactive",
							"onInactiveMarkAs": "Succeeded",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"additionalColumns": [
										{
											"name": "TenantId",
											"value": ""
										}
									],
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"preCopyScript": "Truncate Table [dbo].[WorkSpaces_Staging];\n\n",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false,
									"disableMetricsCollection": false
								},
								"enableStaging": false,
								"dataIntegrationUnits": 4,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "WorkSpaceSourceKey",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['isReadOnly']"
											},
											"sink": {
												"name": "IsReadOnly",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['isOnDedicatedCapacity']"
											},
											"sink": {
												"name": "IsonDedicatedCapacity",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['capacityMigrationStatus']"
											},
											"sink": {
												"name": "CapacityMigrationStatus",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['description']"
											},
											"sink": {
												"name": "WorkSpaceDescription",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['type']"
											},
											"sink": {
												"name": "WorkSpaceType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['state']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['hasWorkspaceLevelSettings ']"
											},
											"sink": {
												"name": "HasWorkspaceLevelSetting",
												"type": "Boolean"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "WorkSpaceName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['TenantId']"
											},
											"sink": {
												"name": "TenantId",
												"type": "Int32"
											}
										}
									],
									"collectionReference": "$['value']",
									"mapComplexValuesToString": false
								}
							},
							"inputs": [
								{
									"referenceName": "WorkSpaces_API",
									"type": "DatasetReference",
									"parameters": {
										"AppTenantId": {
											"value": "@item().AppTentantId",
											"type": "Expression"
										},
										"AppClientId": {
											"value": "@item().AppClientId",
											"type": "Expression"
										},
										"AppClientSecret": {
											"value": "@item().AppClientSecret",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "WorkSpaces_SQL_Staging",
									"type": "DatasetReference"
								}
							]
						},
						{
							"name": "Demo_Workspaces_copy1",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "RestSource",
									"httpRequestTimeout": "00:01:40",
									"requestInterval": "00.00:00:00.010",
									"requestMethod": "GET",
									"paginationRules": {
										"supportRFC5988": "true"
									}
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"mappings": [
										{
											"source": {
												"path": "['id']"
											},
											"sink": {
												"name": "DatasetID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['name']"
											},
											"sink": {
												"name": "DatasetName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['kind']"
											},
											"sink": {
												"name": "Kind",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['id']"
											},
											"sink": {
												"name": "capacityId",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['displayName']"
											},
											"sink": {
												"name": "capacitydisplayName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['capacity']['sku']"
											},
											"sink": {
												"name": "capacitydisplaysku",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['group']['id']"
											},
											"sink": {
												"name": "WorkSpaceID",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['group']['name']"
											},
											"sink": {
												"name": "WorkspaceName",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "['configuredBy'][0]"
											},
											"sink": {
												"name": "configuredBy",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['id']"
											},
											"sink": {
												"name": "DatasetRefreshesSourceKey",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['refreshType']"
											},
											"sink": {
												"name": "RefreshType",
												"type": "String"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['startTime']"
											},
											"sink": {
												"name": "StartTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['endTime']"
											},
											"sink": {
												"name": "EndTime",
												"type": "DateTime"
											}
										},
										{
											"source": {
												"path": "$['lastRefresh']['status']"
											},
											"sink": {
												"name": "Status",
												"type": "String"
											}
										}
									],
									"collectionReference": "$['value']"
								}
							},
							"inputs": [
								{
									"referenceName": "Ls_API_Workspaces",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "LS_SQL_Workspaces",
									"type": "DatasetReference"
								}
							]
						}
					]
				}
			}
		],
		"variables": {
			"a": {
				"type": "String"
			}
		},
		"annotations": []
	}
}