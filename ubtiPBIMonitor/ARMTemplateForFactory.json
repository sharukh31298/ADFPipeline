{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ubtiPBIMonitor"
		},
		"ADF_Pipeline_Status_Log_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ADF_Pipeline_Status_Log'"
		},
		"BaseURl_LS_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'BaseURl_LS'"
		},
		"Capacities_History_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Capacities_History'"
		},
		"Capturing Error Message_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Capturing Error Message'"
		},
		"DB_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DB_UAT'"
		},
		"DataflowHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowHistory_sql_UAT'"
		},
		"DataflowLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowLive_sql_UAT'"
		},
		"DataflowRefreshesHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowRefreshesHistory_sql_UAT'"
		},
		"DataflowRefreshesLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowRefreshesLive_sql_UAT'"
		},
		"DataflowRefreshesStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowRefreshesStaging_sql_UAT'"
		},
		"DataflowStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DataflowStaging_sql_UAT'"
		},
		"DatasetHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetHistory_sql_UAT'"
		},
		"DatasetLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetLive_sql_UAT'"
		},
		"DatasetRefreshesHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetRefreshesHistory_sql_UAT'"
		},
		"DatasetRefreshesLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetRefreshesLive_sql_UAT'"
		},
		"DatasetRefreshesStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetRefreshesStaging_sql_UAT'"
		},
		"DatasetStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetStaging_sql_UAT'"
		},
		"DatasetUsersHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetUsersHistory_sql_UAT'"
		},
		"DatasetUsersLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetUsersLive_sql_UAT'"
		},
		"DatasetUsersStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'DatasetUsersStaging_sql_UAT'"
		},
		"Execute_ChildPipelineLogs_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Execute_ChildPipelineLogs'"
		},
		"LS_ADF_Pipeline_Status_Log_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_ADF_Pipeline_Status_Log'"
		},
		"LS_API_DemoWorkSpaceUsers_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'LS_API_DemoWorkSpaceUsers'"
		},
		"LS_API_Workspaces_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'LS_API_Workspaces'"
		},
		"LS_Dataloadtracker_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Dataloadtracker_SQL'"
		},
		"LS_Dataloadtracker_Sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_Dataloadtracker_Sql_UAT'"
		},
		"LS_ExecuteSP_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_ExecuteSP_UAT'"
		},
		"LS_SQL_DataFlowRefeshLive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DataFlowRefeshLive'"
		},
		"LS_SQL_DataFlowRefreshLive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DataFlowRefreshLive'"
		},
		"LS_SQL_DatasetRefreshesLive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DatasetRefreshesLive'"
		},
		"LS_SQL_DatasetRefreshesLive_Staging_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DatasetRefreshesLive_Staging'"
		},
		"LS_SQL_DatasetUsersLive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DatasetUsersLive'"
		},
		"LS_SQL_DatasetUsers_Live_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DatasetUsers_Live'"
		},
		"LS_SQL_DemoWorkSpaceUsers_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DemoWorkSpaceUsers'"
		},
		"LS_SQL_DemoWorkspaces_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_DemoWorkspaces'"
		},
		"LS_SQL_ReportPagesLive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_ReportPagesLive'"
		},
		"LS_SQL_WorkSpaceUsers_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_WorkSpaceUsers'"
		},
		"LS_SQL_WorkSpacesStaging_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_WorkSpacesStaging'"
		},
		"LS_SQL_WorkspacesUsers_Staging_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'LS_SQL_WorkspacesUsers_Staging'"
		},
		"Ls_API_WorkSpaceUsers_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'Ls_API_WorkSpaceUsers'"
		},
		"Ls_Ds_SQL_ViewReports_Staging_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_Ds_SQL_ViewReports_Staging'"
		},
		"Ls_Sql_Workspacelive_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_Sql_Workspacelive'"
		},
		"Ls_Sql_Workspaces_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_Sql_Workspaces'"
		},
		"Ls_sql_WorkspaceHistory_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Ls_sql_WorkspaceHistory'"
		},
		"ReportPagesHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportPagesHistory_sql_UAT'"
		},
		"ReportPagesLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportPagesLive_sql_UAT'"
		},
		"ReportPagesStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportPagesStaging_sql_UAT'"
		},
		"ReportPages_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportPages_SQL'"
		},
		"ReportStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportStaging_sql_UAT'"
		},
		"ReportsHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportsHistory_sql_UAT'"
		},
		"ReportsLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ReportsLive_sql_UAT'"
		},
		"Rest_workspaces_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'Rest_workspaces'"
		},
		"RetriveClientInformation_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'RetriveClientInformation'"
		},
		"Test_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'Test'"
		},
		"TestActivityevents_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'TestActivityevents'"
		},
		"Test_Pipeline_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Test_Pipeline'"
		},
		"Test_Pipelines_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Test_Pipelines'"
		},
		"Test_Workspaces_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'Test_Workspaces'"
		},
		"Test_WorkspacesSQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Test_WorkspacesSQL'"
		},
		"Testing_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'Testing'"
		},
		"ViewReportLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ViewReportLive_sql_UAT'"
		},
		"ViewReportsHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ViewReportsHistory_sql_UAT'"
		},
		"ViewReportsLive_SQL_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ViewReportsLive_SQL'"
		},
		"ViewReports_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'ViewReports_sql_UAT'"
		},
		"WorkSpaceHistory_Sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WorkSpaceHistory_Sql_UAT'"
		},
		"WorkSpaceLive_SQL_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WorkSpaceLive_SQL_UAT'"
		},
		"WorkSpaceUsersHistory_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WorkSpaceUsersHistory_sql_UAT'"
		},
		"WorkSpaceUsersLive_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WorkSpaceUsersLive_sql_UAT'"
		},
		"WorkSpaceUsersStaging_sql_UAT_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'WorkSpaceUsersStaging_sql_UAT'"
		},
		"getCapacities_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getCapacities'"
		},
		"getCapacities__connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'getCapacities_'"
		},
		"get_Capacities_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'get_Capacities'"
		},
		"get_dataset_refrehses_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'get_dataset_refrehses_api_ls'"
		},
		"get_refresh_schedules_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'get_refresh_schedules_api_ls'"
		},
		"getdataflow_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdataflow_api_ls'"
		},
		"getdataflow_refreshes_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdataflow_refreshes_ls'"
		},
		"getdataset_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdataset_api_ls'"
		},
		"getdatasetrefresh_currenr_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdatasetrefresh_currenr_api_ls'"
		},
		"getdatasets_current_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdatasets_current_api_ls'"
		},
		"getdatasetusers_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getdatasetusers_api_ls'"
		},
		"getgroups_api_ds_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getgroups_api_ds'"
		},
		"getgroups_sql_ls_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'getgroups_sql_ls'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=ubti-ssvr-d-pbimonitor.database.windows.net;Initial Catalog=PowerPulseDB-Dev;User ID=adminsql"
		},
		"getgroupsusers_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getgroupsusers_api_ls'"
		},
		"getrefreshables_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getrefreshables_api_ls'"
		},
		"getreport_pages_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getreport_pages_api_ls'"
		},
		"getreports_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getreports_api_ls'"
		},
		"getreports_current_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getreports_current_api_ls'"
		},
		"getreports_sql_ds_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'getreports_sql_ds'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=ubti-ssvr-d-pbimonitor.database.windows.net;Initial Catalog=PowerPulseDB-Dev;User ID=adminsql"
		},
		"getusers_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'getusers_api_ls'"
		},
		"us_capturefirestrowlookup_Ls_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'us_capturefirestrowlookup_Ls'"
		},
		"view_report_api_ls_clientSecret": {
			"type": "secureString",
			"metadata": "Secure string for 'clientSecret' of 'view_report_api_ls'"
		},
		"ADF_Pipeline_Status_Log_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ADF_Pipeline_Status_Log_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"ADF_Pipeline_Status_Log_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"AzureKeyValut_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://az-kv-pbimonitor-dev.vault.azure.net"
		},
		"AzureKeyVault1_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://az-kv-pbimonitor-dev.vault.azure.net/secrets/Test/2e40720515104f8f999ea62a40049e9b"
		},
		"AzureKeyVault2_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://az-kv-pbimonitor-dev.vault.azure.net/secrets/Test/2e40720515104f8f999ea62a40049e9b"
		},
		"AzureSQLCredentials_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://az-kv-pbimonitor-dev.vault.azure.net/"
		},
		"AzureSqlDatabaseLS_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"AzureSqlDatabaseLS_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"AzureSqlDatabaseLS_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Azure_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Azure_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Azure_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"BaseURl_LS_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com"
		},
		"BaseURl_LS_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"Capturing Error Message_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Capturing Error Message_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Capturing Error Message_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DB_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DB_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DB_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowRefreshesHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowRefreshesHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowRefreshesHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowRefreshesLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowRefreshesLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowRefreshesLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowRefreshesStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowRefreshesStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowRefreshesStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DataflowStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DataflowStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DataflowStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetRefreshesHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetRefreshesHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetRefreshesHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetRefreshesLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetRefreshesLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetRefreshesLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetRefreshesStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetRefreshesStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetRefreshesStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetUsersHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetUsersHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetUsersHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetUsersLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetUsersLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetUsersLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetUsersStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetUsersStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"DatasetUsersStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetUsers_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetUsers_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"DatasetUsers_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"DatasetuserHistory_sql_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"DatasetuserHistory_sql_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"DatasetuserHistory_sql_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Execute_ChildPipelineLogs_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Execute_ChildPipelineLogs_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Execute_ChildPipelineLogs_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_ADF_Pipeline_Status_Log_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_ADF_Pipeline_Status_Log_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"LS_ADF_Pipeline_Status_Log_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_API_Dataflow_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/dataflows"
		},
		"LS_API_Dataflow_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_Dataflowrefreshes_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/dataflows/',linkedService().DataFlowID,'/transactions')}\n"
		},
		"LS_API_Dataflowrefreshes_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_DatasetUsers_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "\n@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/datasets/',linkedService().DatasetID,'/users')}"
		},
		"LS_API_DatasetUsers_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_Datasetrefreshes_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/datasets/',linkedService().DatasetID,'/refreshes')}"
		},
		"LS_API_Datasetrefreshes_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_Datasets_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/datasets"
		},
		"LS_API_Datasets_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_DemoWorkSpaceUsers_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/groups/',linkedService().WorkSpaceID,'/users')}"
		},
		"LS_API_DemoWorkSpaceUsers_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_ViewReports_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/activityevents?startDateTime=''',substring(addDays(utcNow(), -1), 0,10),'T00%3A00%3A00.000Z''&endDateTime=''',substring(addDays(utcNow(), -1), 0, 10),'T23%3A59%3A59.000Z''&%24filter=Activity%20eq%20''viewreport''')}"
		},
		"LS_API_ViewReports_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_API_Workspaces_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/groups?$expand=users&$top=2"
		},
		"LS_API_Workspaces_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_Api_ReportPages_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/reports/',linkedService().ReportID,'/pages')}"
		},
		"LS_Api_ReportPages_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_Api_Reports_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " https://api.powerbi.com/v1.0/myorg/admin/reports"
		},
		"LS_Api_Reports_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"LS_Dataloadtracker_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_Dataloadtracker_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_Dataloadtracker_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_Dataloadtracker_Sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_Dataloadtracker_Sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"LS_Dataloadtracker_Sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_ExecuteSP_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_ExecuteSP_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"LS_ExecuteSP_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DataFlowRefeshLive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DataFlowRefeshLive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DataFlowRefeshLive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DataFlowRefreshLive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DataFlowRefreshLive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DataFlowRefreshLive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DatasetRefreshesLive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DatasetRefreshesLive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DatasetRefreshesLive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DatasetUsersLive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DatasetUsersLive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DatasetUsersLive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DatasetUsers_Live_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DatasetUsers_Live_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_DatasetUsers_Live_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_DemoWorkspaces_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_DemoWorkspaces_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"LS_SQL_DemoWorkspaces_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_ReportPagesLive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_ReportPagesLive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_ReportPagesLive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_WorkSpaceUsers_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_WorkSpaceUsers_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"LS_SQL_WorkSpaceUsers_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_WorkSpacesStaging_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_WorkSpacesStaging_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_WorkSpacesStaging_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Ls_API_WorkSpaceUsers_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/groups/',linkedService().WorkspaceID,'/users')}"
		},
		"Ls_API_WorkSpaceUsers_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"Ls_Api_Workspace_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/groups?$top=5000"
		},
		"Ls_Api_Workspace_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Ls_Sql_Workspacelive_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Ls_Sql_Workspacelive_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Ls_Sql_Workspacelive_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Ls_Sql_Workspaces_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Ls_Sql_Workspaces_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Ls_Sql_Workspaces_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Ls_sql_WorkspaceHistory_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Ls_sql_WorkspaceHistory_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"Ls_sql_WorkspaceHistory_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportPagesHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportPagesHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportPagesHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportPagesLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportPagesLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportPagesLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportPagesStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportPagesStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportPagesStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportPages_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportPages_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"ReportPages_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportsHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportsHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportsHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ReportsLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ReportsLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ReportsLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Rest_workspaces_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/groups?$top=5000"
		},
		"Rest_workspaces_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "f5624cd2-8761-4b84-9b84-2f6ca7120076"
		},
		"RetriveClientInformation_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"RetriveClientInformation_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"RetriveClientInformation_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Test_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0"
		},
		"Test_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"TestActivityevents_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://wabi-west-us-c-primary-redirect.analysis.windows.net/v1.0/myorg/admin/activityevents?continuationToken='eyJTdGFydERhdGVUaW1lIjoiMjAyNC0wMy0xMlQwMDowMDowMC4wMDAwMDAwXHUwMDJCMDA6MDAiLCJFbmREYXRlVGltZSI6IjIwMjQtMDMtMTJUMjM6NTk6NTkuMDAwMDAwMFx1MDAyQjAwOjAwIiwiRmlsZU5hbWUiOiIyMDI0LTAzLTEyVDAyX3YxXzAwMS5jc3YiLCJGaWxlT2Zmc2V0IjowLCJBY3Rpdml0eSI6InZpZXdyZXBvcnQiLCJVc2VySWQiOm51bGx9LDIwMjQtMDMtMTJUMDA6MDA6MDAuMDAwMDAwMCswMDowMCwyMDI0LTAzLTEyVDIzOjU5OjU5LjAwMDAwMDArMDA6MDAsMCx2aWV3cmVwb3J0LA%3D%3D'"
		},
		"TestActivityevents_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"Test_Pipeline_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Test_Pipeline_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"Test_Pipeline_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Test_Pipelines_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Test_Pipelines_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"Test_Pipelines_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Test_Workspaces_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/groups?$expand=reports,datasets,dataflows,users&$top=5000"
		},
		"Test_Workspaces_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"Test_WorkspacesSQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Test_WorkspacesSQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"Test_WorkspacesSQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"Testing_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"Testing_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "pbimonitor"
		},
		"Testing_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"User Password_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://Az-KV-PBIMonitor-Dev.vault.azure.net/"
		},
		"ViewReportLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ViewReportLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ViewReportLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ViewReportsHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ViewReportsHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ViewReportsHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ViewReportsLive_SQL_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ViewReportsLive_SQL_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"ViewReportsLive_SQL_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"ViewReports_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"ViewReports_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"ViewReports_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"WorkSpaceHistory_Sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"WorkSpaceHistory_Sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"WorkSpaceHistory_Sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"WorkSpaceLive_SQL_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"WorkSpaceLive_SQL_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"WorkSpaceLive_SQL_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"WorkSpaceUsersLive_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"WorkSpaceUsersLive_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"WorkSpaceUsersLive_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Stage"
		},
		"WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"getCapacities_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/capacities"
		},
		"getCapacities_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"get_dataset_refrehses_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/datasets/',linkedService().DatasetID,'/refreshes')}"
		},
		"get_dataset_refrehses_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"get_refresh_schedules_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/datasets/',linkedService().DatasetID,'/refreshSchedule')}"
		},
		"get_refresh_schedules_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"getdataflow_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/dataflows"
		},
		"getdataflow_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getdataflow_refreshes_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/dataflows/',linkedService().DataFlowID,'/transactions')}"
		},
		"getdataflow_refreshes_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getdataset_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/datasets"
		},
		"getdataset_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getdatasetrefresh_currenr_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/capacities/refreshables?%24top=50000&%24filter=startTime%20ge%20',encodeURIComponent(formatDateTime(linkedService().starttime, 'yyyy-MM-ddTHH:mm:ss.fffZ')))}"
		},
		"getdatasetrefresh_currenr_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"getdatasets_current_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('\nhttps://api.powerbi.com/v1.0/myorg/admin/datasets?%24filter=createdDate%20ge%20',encodeURIComponent(formatDateTime(linkedService().Created_Date\n, 'yyyy-MM-ddTHH:mm:ss.fffZ')))}"
		},
		"getdatasets_current_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"getdatasetusers_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/datasets/',linkedService().DatasetID,'/users')}\n\n\n"
		},
		"getdatasetusers_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getgroups_api_ds_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/groups?$top=5000"
		},
		"getgroups_api_ds_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getgroupsusers_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/groups/',linkedService().WorkspaceID,'/users')}"
		},
		"getgroupsusers_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getrefreshables_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://api.powerbi.com/v1.0/myorg/admin/capacities/refreshables?$top=5000"
		},
		"getrefreshables_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"getreport_pages_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/groups/',linkedService().WorkSpaceID,'/reports/',linkedService().ReportID,'/pages')}"
		},
		"getreport_pages_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getreports_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": " https://api.powerbi.com/v1.0/myorg/admin/reports"
		},
		"getreports_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		},
		"getreports_current_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{\n    concat(\n'https://api.powerbi.com/v1.0/myorg/admin/reports?$filter=modifiedDateTime ge ',formatDateTime(linkedService().date,'yyyy-MM-ddTHH:mm:ss.fffZ'))}"
		},
		"getreports_current_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"getusers_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/reports/',linkedService().ReportID,'/users')}"
		},
		"getusers_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
		},
		"us_capturefirestrowlookup_Ls_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "ubti-ssvr-d-pbimonitor.database.windows.net"
		},
		"us_capturefirestrowlookup_Ls_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "PowerPulseDB-Dev"
		},
		"us_capturefirestrowlookup_Ls_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "adminsql"
		},
		"view_report_api_ls_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "@{concat('https://api.powerbi.com/v1.0/myorg/admin/activityevents?startDateTime=''',substring(addDays(utcNow(), -1), 0,10),'T00%3A00%3A00.000Z''&endDateTime=''',substring(addDays(utcNow(), -1), 0, 10),'T23%3A59%3A59.000Z''&%24filter=Activity%20eq%20''viewreport''')}"
		},
		"view_report_api_ls_properties_typeProperties_clientId": {
			"type": "string",
			"defaultValue": "@{linkedService().AppClientId}"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/Capacities')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Capacities Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Capacities",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capacities Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Capacities Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"CapacitiesSourceskey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CapacitiesID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CapacitiesID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CapacitiesSourceskey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacitiesSourceskey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Admins",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Admins",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sku",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sku",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Capacities_SQL_Live",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Capacities_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capacities History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Capacities Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CapacitiesID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "CapacitiesID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CapacitiesSourceskey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacitiesSourceskey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Admins",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Admins",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Sku",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Sku",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "State",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Region",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Capacities_SQL_Live",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Capacities_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Capacities')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Capacities_SQL_Live')]",
				"[concat(variables('factoryId'), '/datasets/Capacities_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Capacities_History')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DONT TOUCH References')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].[WorkSpaces_Staging];\n\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace Live Data",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace History",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('WorkSpace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Workspace Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Workspace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 2,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string",
						"defaultValue": "9049e040-2bf1-47a2-ad39-e23869af08ff"
					},
					"AppClientId": {
						"type": "string",
						"defaultValue": "3a8df53a-9873-4e70-9d69-4725460c62b8"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 9
					}
				},
				"variables": {
					"Workspaces_Status": {
						"type": "String"
					},
					"Workspaces_StartTime": {
						"type": "String"
					},
					"Workspaces_EndTime": {
						"type": "String"
					},
					"Workspaces_IST": {
						"type": "String"
					},
					"Workspaces_IST2": {
						"type": "String"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_API')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataflows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DataflowSourcekey,WorkSpaceID from [dbo].[DataFlows_batch] where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Dataflow ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataflows').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get DataflowRefresh_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "DataFlowID",
													"value": {
														"value": "@item().DataflowSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DataFlowID']"
													},
													"sink": {
														"name": "DataflowID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DataFlowRefreshes_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"DataFlowID": {
													"value": "@item().DataflowSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DataFlowRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DataflowRefresh_Live",
									"type": "Copy",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DataflowRefreshesSourcekey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DataflowID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DataflowID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DataFlowRefreshLive_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DataFlowRefeshLive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DataflowRefreshes Staging",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "DataflowRefreshes Staging Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DataflowRefresh_Staging').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing DataflowRefreshes Live Status",
									"type": "SetVariable",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Live",
											"dependencyConditions": [
												"Succeeded",
												"Failed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "DataflowRefreshesLive Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DataflowRefresh_Live').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing Error Message",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Dataflowrefreshes Staging EM",
										"value": {
											"value": "@activity('Get DataflowRefresh_Staging').error?.message",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing EM",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "Capturing Error Message",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[Sp_Capturing Error Message]",
										"storedProcedureParameters": {
											"AppClientId": {
												"value": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AppClientSecret": {
												"value": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												},
												"type": "String"
											},
											"AppTentantId": {
												"value": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataLoadTrackerId": {
												"value": "",
												"type": "String"
											},
											"ErrorMessage": {
												"value": {
													"value": "@variables('Dataflowrefreshes Staging EM')",
													"type": "Expression"
												},
												"type": "String"
											},
											"PipelineRunId": {
												"value": {
													"value": "@pipeline().RunId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessEndTime": {
												"value": {
													"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"ProcessStartTime": {
												"value": {
													"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@activity('Get DataflowRefresh_Staging').Status",
													"type": "Expression"
												},
												"type": "String"
											},
											"TentantId": {
												"value": {
													"value": "@pipeline().parameters.TenantId",
													"type": "Expression"
												},
												"type": "Int32"
											},
											"PipelineName": {
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"type": "String"
											},
											"WorkSpaceID": {
												"value": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"type": "String"
											},
											"DataFlowID": {
												"value": {
													"value": "@item().DataflowSourceKey",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "Capturing Error Message",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Dataflows').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Dataflows Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get Dataflowsrefreshes Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Dataflows').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					},
					"Dataflowrefreshes Staging EM": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_API')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DataFlowRefreshLive_Staging')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DataFlowRefeshLive')]",
				"[concat(variables('factoryId'), '/linkedServices/Capturing Error Message')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get DataFlow Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo FROM \n[dbo].[DataFlows_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataflow Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get DataFlow Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If not max batch",
									"type": "IfCondition",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Execute Pipeline DataflowRefreshes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(item().BatchNo,activity('Get DataFlow Batches').output.count)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 Hour",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 3600
												}
											}
										]
									}
								},
								{
									"name": "Execute Pipeline DataflowRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataFlowRefreshes",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataflow Refreshes",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].DataflowRefreshes;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DataFlow Refreshes History",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing DataflowRefreshes Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Dataflowsrefreshes Batch",
							"value": {
								"value": "@activity('Get DataFlow Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowRefreshes History Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DataFlow Refreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataflowRefreshes History Status",
							"value": {
								"value": "@activity('DataFlow Refreshes History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DataflowRefreshes History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow Refreshes History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Dataflowsrefreshes Status'),'Succeeded'),\nequals(variables('DataflowRefreshes Staging Status'),'Succeeded')),\nequals(variables('DataflowRefreshesLive Status'),'Succeeded')),\nequals(variables('Get Dataflowsrefreshes Batch'),'Succeeded')),\nequals(variables('DataflowRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL_History')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get DataFlow Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo FROM \n[dbo].[DataFlows_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataflow Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get DataFlow Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If not max batch",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Execute Pipeline DataflowRefreshes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(item().BatchNo,activity('Get DataFlow Batches').output.count)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 Hour",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 3600
												}
											}
										]
									}
								},
								{
									"name": "Execute Pipeline DataflowRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataFlowRefreshes_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataflow Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].DataflowRefreshes;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DataFlow Refreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL_History')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get DataFlow Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo FROM \n[dbo].[DataFlows_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataflowStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataflow Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get DataFlow Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If not max batch",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Execute Pipeline DataflowRefreshes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(item().BatchNo,activity('Get DataFlow Batches').output.count)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 Hour",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 3600
												}
											}
										]
									}
								},
								{
									"name": "Execute Pipeline DataflowRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataFlowRefreshes",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantID": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataflow Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].DataflowRefreshes;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DataFlow Refreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataflowRefreshesStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataflowRefreshesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing DataflowRefreshes Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Dataflowsrefreshes Batch",
							"value": {
								"value": "@activity('Get DataFlow Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowRefreshes History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Refreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataflowRefreshes History Status",
							"value": {
								"value": "@activity('DataFlow Refreshes History').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataflowStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DataflowRefreshesStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DataflowRefreshesHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataflows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DataflowSourcekey,WorkSpaceID from [dbo].[DataFlows_batch]  where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Dataflow ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataflows').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get Dataflow Refresh Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "DataFlowID",
													"value": {
														"value": "@item().DataflowSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DataFlowID']"
													},
													"sink": {
														"name": "DataflowID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DataflowRefreshesAPI",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"DataFlowID": {
													"value": "@item().DataflowSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DataFlowRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Dataflows').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Dataflows').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Dataflows').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantID": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DataflowRefreshesAPI')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataflows",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DataflowSourcekey,WorkSpaceID from [dbo].[DataFlows_batch]where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataflowLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Dataflow ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataflows').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get DataflowRefresh_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "DataFlowID",
													"value": {
														"value": "@item().DataflowSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "[['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DataFlowID']"
													},
													"sink": {
														"name": "DataflowID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DataFlowRefreshes_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"DataFlowID": {
													"value": "@item().DataflowSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DataflowRefreshesStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DataflowRefresh_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DataflowRefreshesSourcekey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DataflowRefreshesSourcekey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DataflowID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DataflowID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DataflowRefreshesStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DataflowRefreshesLive_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DataflowRefreshes Staging",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataflowRefreshes Staging Status",
										"value": {
											"value": "@activity('Get DataflowRefresh_Staging').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing DataflowRefreshes Live Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DataflowRefresh_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DataflowRefreshes Status",
										"value": {
											"value": "@activity('Get DataflowRefresh_Live').Status",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing Get Dataflows Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataflow ID in Loop",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Dataflowsrefreshes Status'),'Succeeded'),\nequals(variables('DataflowRefreshes Staging Status'),'Succeeded')),\nequals(variables('DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Get Dataflowsrefreshes Batch'),'Succeeded')),\nequals(variables('DataflowRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Dataflows Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataflows",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Dataflowsrefreshes Status",
							"value": {
								"value": "@activity('Get Dataflows').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantID": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataflowLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DataFlowRefreshes_API')]",
				"[concat(variables('factoryId'), '/datasets/DataflowRefreshesStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DataflowRefreshesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlows')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Execute ChilsPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Dataflows_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectId']"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DataflowSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Staging Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows History Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChilsPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Dataflows staging Status'),'Succeeded'),\nequals(variables('Dataflows Live Status'),'Succeeded')),\nequals(variables('Dataflows History Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Dataflows Staging Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows Staging Status",
							"value": {
								"value": "@activity('DataFlow Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows Live Status",
							"value": {
								"value": "@activity('DataFlow Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows History Status",
							"value": {
								"value": "@activity('DataFlow History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChilsPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_API')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlows_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Dataflows_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectId']"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlowsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Dataflows]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DataflowSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('DataFlow Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('DataFlow Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('DataFlow Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlowsAPI')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL')]",
				"[concat(variables('factoryId'), '/datasets/DataFlow_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlows_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Dataflows_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectId']"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DataflowStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DataflowSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataflowStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataflowLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataflowStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataflowHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Staging Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows History Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Dataflows staging Status'),'Succeeded'),\nequals(variables('Dataflows Live Status'),'Succeeded')),\nequals(variables('Dataflows History Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Dataflows Staging Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows Staging Status",
							"value": {
								"value": "@activity('DataFlow Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows Live Status",
							"value": {
								"value": "@activity('DataFlow Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataflows History Status",
							"value": {
								"value": "@activity('DataFlow History').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DataFlow_API')]",
				"[concat(variables('factoryId'), '/datasets/DataflowStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DataflowLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DataflowHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Datasets]')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetRefreshes_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['requestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['id']"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshes_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DatasetRefreshes_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DatasetRefreshesSourceKey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "RequestId",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RequestId",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DatasetRefreshesLive_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQl_DatasetRefreshesLive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DatasetRefreshes Staging Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "Dataset Refreshes Staging Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DatasetRefreshes_Staging').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing DatasetRefreshes Live Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "DatasetRefreshes Live Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DatasetRefreshes_Live').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get DatasetRefreshes Status'),'Succeeded'),\nequals(variables('Dataset Refreshes Staging Status'),'Succeeded')),\nequals(variables('DatasetRefreshes Live Status'),'Succeeded')),\nequals(variables('Get DatasetRefreshes Status'),'Succeeded')),\nequals(variables('DatasetRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Datasetsrefreshes Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get DatasetRefreshe Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Datasets').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantID": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_API')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DatasetRefreshesLive_Staging')]",
				"[concat(variables('factoryId'), '/datasets/SQl_DatasetRefreshesLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetRefreshes",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantID": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetRefreshes];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetRefreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing Get DatasetRefreshes Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get DatasetsRefreshes Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetRefreshes History status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetRefreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetRefreshes History Status",
							"value": {
								"value": "@activity('DatasetRefreshes History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetRefreshes History status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetRefreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get DatasetRefreshe Status'),'Succeeded'),\nequals(variables('Dataset Refreshes Staging Status'),'Succeeded')),\nequals(variables('DatasetRefreshes Live Status'),'Succeeded')),\nequals(variables('Get DatasetsRefreshes Status'),'Succeeded')),\nequals(variables('DatasetRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL_History')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetRefreshes_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetRefreshes];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetRefreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL_History')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetRefreshes",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantID": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetRefreshes];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetRefreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetRefreshesLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetRefreshesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing Get DatasetRefreshes Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get DatasetsRefreshes Batch Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Dataset Batches').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					},
					{
						"name": "Capturing DatasetRefreshes History status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetRefreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "DatasetRefreshes History Status",
									"value": {
										"type": "Expression",
										"content": "@activity('DatasetRefreshes History').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshesLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshesHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Dataset_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetRefreshes Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['requestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['id']"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshAttempts'][0]"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshesAPI",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantID": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshesAPI')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Dataset_batch] where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetRefreshes_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['requestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['id']"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshes_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshesStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DatasetRefreshes_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DatasetRefreshesSourceKey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "RequestId",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "RequestId",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Status",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshesStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshesLive_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DatasetRefreshes Staging Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Dataset Refreshes Staging Status",
										"value": {
											"value": "@activity('Get DatasetRefreshes_Staging').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing DatasetRefreshes Live Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetRefreshes_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DatasetRefreshes Live Status",
										"value": {
											"value": "@activity('Get DatasetRefreshes_Live').Status",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetID in Loop",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get DatasetRefreshes Status'),'Succeeded'),\nequals(variables('Dataset Refreshes Staging Status'),'Succeeded')),\nequals(variables('DatasetRefreshes Live Status'),'Succeeded')),\nequals(variables('Get DatasetRefreshes Status'),'Succeeded')),\nequals(variables('DatasetRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Datasetsrefreshes Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get DatasetRefreshes Status",
							"value": {
								"value": "@activity('Get Datasets').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantID": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshes_API')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshesStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetRefreshesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Datasets]')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetUsers_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasetUserAccessRight']"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsers_sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DatasetUsers_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DatasetUserSourceKey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DatasetUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "SQL_DatasetUsers_Staging",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_DatasetUsersLive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DatasetUsers Staging Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "DatasetUser Staging Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DatasetUsers_Staging').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing DatasetUsers Live",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "DatasetUser Live Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get DatasetUsers_Live').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUsers Staging Status'),'Succeeded')),\nequals(variables('DatasetUsers Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Datasets Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get Datasets Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Datasets').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_API')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_sql')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DatasetUsers_Staging')]",
				"[concat(variables('factoryId'), '/datasets/SQL_DatasetUsersLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Datasets Batches Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetUsers History Status",
							"value": {
								"value": "@activity('DatasetUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetsUsers Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "CapturingUsers Dataset Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUser Staging Status'),'Succeeded')),\nequals(variables('DatasetUser Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_sql')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUserHistory_sql')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_sql')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUserHistory_sql')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsersStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUsersHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Datasets Batches Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Dataset Batches').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "DatasetUsers History Status",
									"value": {
										"type": "Expression",
										"content": "@activity('DatasetUsers History').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsersStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsersHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Dataset_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Dataset Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasetUserAccessRight']"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsersAPI",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsers_sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsersAPI')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Dataset_Batch] where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetUsers_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasetUserAccessRight']"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsersStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get DatasetUsers_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"DatasetUserSourceKey"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "DatasetUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "DatasetUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsersStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsersLive_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing DatasetUsers Staging Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DatasetUsers Staging Status",
										"value": {
											"value": "@activity('Get DatasetUsers_Staging').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing DatasetUsers Live",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get DatasetUsers_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "DatasetUsers Live Status",
										"value": {
											"value": "@activity('Get DatasetUsers_Live').Status",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetID in Loop",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUsers Staging Status'),'Succeeded')),\nequals(variables('DatasetUsers Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Datasets Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Datasets Status",
							"value": {
								"value": "@activity('Get Datasets').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsers_API')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsersStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetUsersLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].Datasets_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['addRowsAPIEnabled']"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRefreshable']"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRolesRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['targetStorageMode']"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDate']"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['contentProviderType']"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createReportEmbedURL']"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['qnaEmbedURL']"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isInPlaceSharingEnabled']"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['autoSyncReadOnlyReplicas']"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['maxReadOnlyReplicas']"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DatasetSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing Dataset Staging Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataset History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing DatasetLive status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataset History Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Dataset staging Status'),'Succeeded'),\nequals(variables('Dataset Live Status'),'Succeeded')),\nequals(variables('Dataset History Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Dataset Staging Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset staging Status",
							"value": {
								"value": "@activity('Dataset Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetLive status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset Live Status",
							"value": {
								"value": "@activity('Dataset Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataset History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset History Status",
							"value": {
								"value": "@activity('Dataset History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_API')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasets_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].Datasets_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['addRowsAPIEnabled']"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRefreshable']"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRolesRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['targetStorageMode']"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDate']"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['contentProviderType']"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createReportEmbedURL']"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['qnaEmbedURL']"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isInPlaceSharingEnabled']"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['autoSyncReadOnlyReplicas']"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['maxReadOnlyReplicas']"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Datasets",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DatasetSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Dataset Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DatasetsAPI')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasets_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].Datasets_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['addRowsAPIEnabled']"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRefreshable']"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRolesRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['targetStorageMode']"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDate']"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['contentProviderType']"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createReportEmbedURL']"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['qnaEmbedURL']"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isInPlaceSharingEnabled']"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['autoSyncReadOnlyReplicas']"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['maxReadOnlyReplicas']"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DatasetSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing Dataset Staging Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataset History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing DatasetLive status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataset History Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Dataset staging Status'),'Succeeded'),\nequals(variables('Dataset Live Status'),'Succeeded')),\nequals(variables('Dataset History Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Dataset Staging Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset staging Status",
							"value": {
								"value": "@activity('Dataset Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetLive status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset Live Status",
							"value": {
								"value": "@activity('Dataset Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataset History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataset History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Dataset History Status",
							"value": {
								"value": "@activity('Dataset History').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_API')]",
				"[concat(variables('factoryId'), '/datasets/DatasetStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/DatasetHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasources')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select Datasetsourcekey, WorkspaceID from datasets",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Datasources",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourcekey",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasourceType']"
													},
													"sink": {
														"name": "DatasourceType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['path']"
													},
													"sink": {
														"name": "ConnectionPath",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['kind']"
													},
													"sink": {
														"name": "Kind",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['url']"
													},
													"sink": {
														"name": "ConnectionURL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['server']"
													},
													"sink": {
														"name": "Server",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['database']"
													},
													"sink": {
														"name": "Database",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['datasourceId']"
													},
													"sink": {
														"name": "DataSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayId']"
													},
													"sink": {
														"name": "GatewayID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "APIs_Datasets",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@{concat('/v1.0/myorg/groups/',item().WorkspaceID,'/datasets/',item().DatasetSourcekey,'/datasources')}\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Datasources_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/APIs_Datasets')]",
				"[concat(variables('factoryId'), '/datasets/Datasources_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoWorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Capturing WorkSpacesSourcesKey",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select WorkSpaceSourceKey from [dbo].[DemoWorkSpaces]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DemoWorkSpaceUsers",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach DemoWorkSapceUsers",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Capturing WorkSpacesSourcesKey",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Capturing WorkSpacesSourcesKey').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Get DemoWorkSpaceUsers",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DemoWorkSpaces_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DemoWorkSpaceUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DemoWorkSpaceUsers')]",
				"[concat(variables('factoryId'), '/datasets/DemoWorkSpaces_API')]",
				"[concat(variables('factoryId'), '/datasets/DemoWorkSpaceUsers_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Demo_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Demo_Workspaces",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Ls_API_Workspaces",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "LS_SQL_Workspaces",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Ls_API_Workspaces')]",
				"[concat(variables('factoryId'), '/datasets/LS_SQL_Workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipelineV1_0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantID": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantID": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp_Dataloadtracker",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
							"storedProcedureParameters": {
								"AppClientId": {
									"value": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppClientSecret": {
									"value": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppTentantId": {
									"value": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"CreatedDate": {
									"value": "",
									"type": "DateTime"
								},
								"CurrentStatus": {
									"value": "Started",
									"type": "String"
								},
								"DataLoadTrackerId": {
									"value": "",
									"type": "String"
								},
								"IsFirstTimeLoad": {
									"value": "",
									"type": "Boolean"
								},
								"ModifiedDate": {
									"value": "",
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": "",
									"type": "String"
								},
								"ProcessEndTime": {
									"value": "",
									"type": "DateTime"
								},
								"ProcessStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"Status": {
									"value": "",
									"type": "String"
								},
								"TentantId": {
									"value": "",
									"type": "Int32"
								},
								"TriggerType": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Capturing Workspaces_Master status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Workspaces Status",
							"value": {
								"value": "@activity('Workspaces_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasetsrefresh Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetfreshes status",
							"value": {
								"value": "@activity('Datasetrefresh_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Dataflows Status",
							"value": {
								"value": "@activity('Dataflows_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasets Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasets Status",
							"value": {
								"value": "@activity('Datasets_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportsMaster status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Report status",
							"value": {
								"value": "@activity('Reports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Call_UpdateStatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Capturing Workspaces_Master status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing WorkSpaceUsers Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportsMaster status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Viewreports Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Update]",
							"storedProcedureParameters": {
								"DataLoadTrackerID": {
									"value": {
										"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(and(and(and(and(and(\nequals(variables('Master Workspaces Status'),'Succeeded'),\nequals(variables('Master WorkSpaceUsers Status'),'Succeeded')),\nequals(variables('Master Report status'),'Succeeded')),\nequals(variables('Master ReportPages Status'),'Succeeded')),\nequals(variables('Master Datasets Status'),'Succeeded')),\nequals(variables('Master Datasetusers Status'),'Succeeded')),\nequals(variables('Master Datasetfreshes status'),'Succeeded')),\nequals(variables('Master Dataflows Status'),'Succeeded')),\nequals(variables('Master DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Master Viewreports Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQL_SP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Capturing WorkSpaceUsers Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master WorkSpaceUsers Status",
							"value": {
								"value": "@activity('WorkspaceUsers__Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPagesMaster Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master ReportPages Status",
							"value": {
								"value": "@activity('ReportPages_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetUsersMaster Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetusers Status",
							"value": {
								"value": "@activity('Datasetusers_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Viewreports Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Viewreports Status",
							"value": {
								"value": "@activity('ViewReports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowsRefreshes Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master DataflowRefreshes Status",
							"value": {
								"value": "@activity('DataflowRefreshes_Master').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					},
					"Result": {
						"type": "String",
						"defaultValue": "Success"
					},
					"a": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]",
				"[concat(variables('factoryId'), '/pipelines/Reports')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Dataloadtracker_SQL')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers')]",
				"[concat(variables('factoryId'), '/datasets/AzureSQL_SP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipeline_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp_Dataloadtracker",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
							"storedProcedureParameters": {
								"AppClientId": {
									"value": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppClientSecret": {
									"value": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppTentantId": {
									"value": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"CreatedDate": {
									"value": "",
									"type": "DateTime"
								},
								"CurrentStatus": {
									"value": "Started",
									"type": "String"
								},
								"DataLoadTrackerId": {
									"value": "",
									"type": "String"
								},
								"IsFirstTimeLoad": {
									"value": "",
									"type": "Boolean"
								},
								"ModifiedDate": {
									"value": "",
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": "",
									"type": "String"
								},
								"ProcessEndTime": {
									"value": "",
									"type": "DateTime"
								},
								"ProcessStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"Status": {
									"value": "",
									"type": "String"
								},
								"TentantId": {
									"value": "",
									"type": "Int32"
								},
								"TriggerType": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Capturing Workspaces_Master status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Workspaces Status",
							"value": {
								"value": "@activity('Workspaces_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasetsrefresh Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetfreshes status",
							"value": {
								"value": "@activity('Datasetrefresh_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Dataflows Status",
							"value": {
								"value": "@activity('Dataflows_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasets Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasets Status",
							"value": {
								"value": "@activity('Datasets_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportsMaster status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Report status",
							"value": {
								"value": "@activity('Reports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Call_UpdateStatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing Workspaces_Master status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing WorkSpaceUsers Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportsMaster status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Datasets Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Master Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Update]",
							"storedProcedureParameters": {
								"DataLoadTrackerID": {
									"value": {
										"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(and(and(and(and(and(\nequals(variables('Master Workspaces Status'),'Succeeded'),\nequals(variables('Master WorkSpaceUsers Status'),'Succeeded')),\nequals(variables('Master Report status'),'Succeeded')),\nequals(variables('Master ReportPages Status'),'Succeeded')),\nequals(variables('Master Datasets Status'),'Succeeded')),\nequals(variables('Master Datasetusers Status'),'Succeeded')),\nequals(variables('Master Datasetfreshes status'),'Succeeded')),\nequals(variables('Master Dataflows Status'),'Succeeded')),\nequals(variables('Master DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Master Viewreports Status'),'Succeeded')),\n'Succeeded','Success')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_Sql_UAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LS_ExecuteSP_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Capturing WorkSpaceUsers Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master WorkSpaceUsers Status",
							"value": {
								"value": "@activity('WorkspaceUsers__Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPagesMaster Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master ReportPages Status",
							"value": {
								"value": "@activity('ReportPages_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetUsersMaster Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetusers Status",
							"value": {
								"value": "@activity('Datasetusers_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Viewreports Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Viewreports Status",
							"value": {
								"value": "@activity('ViewReports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowsRefreshes Master Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master DataflowRefreshes Status",
							"value": {
								"value": "@activity('DataflowRefreshes_Master').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					},
					"Result": {
						"type": "String",
						"defaultValue": "Success"
					},
					"a": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Master"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/Reports_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Batch_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Batch_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Batch_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Batch_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Dataloadtracker_SQL')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Dataloadtracker_Sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/LS_ExecuteSP_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipelinesExecution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Capturing LogID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								},
								"ClientId": {
									"value": "@pipeline().parameters.ClientId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stored Precodure_startPipelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_StartPipelineExecution]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunningStatus": {
									"value": "False",
									"type": "Boolean"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TenantId": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing LogID",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Stored Precodure_startPipelineExecution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure_UpdatePIpelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Capturing LogID').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ClientId": {
						"type": "String",
						"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
					},
					"TenantId": {
						"type": "String",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"AZSecretName": {
						"type": "String",
						"defaultValue": "UBTIClientSecretName"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]",
				"[concat(variables('factoryId'), '/pipelines/Reports')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipelinesExecution_V1_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Capturing LogID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Add Data Load Tracker Details",
						"description": "Added Tracker Id",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
							"storedProcedureParameters": {
								"AppTentantId": {
									"value": null,
									"type": "String"
								},
								"AppClientId": {
									"value": null,
									"type": "String"
								},
								"AppClientSecret": {
									"value": null,
									"type": "String"
								},
								"PipelineRunId": {
									"value": null,
									"type": "String"
								},
								"ProcessStartTime": {
									"value": null,
									"type": "Datetime"
								},
								"ProcessEndTime": {
									"value": null,
									"type": "Datetime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"CurrentStatus": {
									"value": null,
									"type": "String"
								},
								"IsFirstTimeLoad": {
									"value": null,
									"type": "Boolean"
								},
								"TriggerType": {
									"value": null,
									"type": "String"
								},
								"CreatedDate": {
									"value": null,
									"type": "Datetime"
								},
								"ModifiedDate": {
									"value": null,
									"type": "Datetime"
								},
								"TenantId": {
									"value": null,
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing LogID",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Add Data Load Tracker Details",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure_UpdatePIpelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Capturing LogID').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]",
				"[concat(variables('factoryId'), '/pipelines/Reports')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_Dataloadtracker_SQL')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateways')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Data",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Gateway_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Data').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Gateways",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourcekey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "GatewaySourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayId']"
													},
													"sink": {
														"name": "GatewayID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "GatewayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['type']"
													},
													"sink": {
														"name": "Type",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['publicKey']['exponent']"
													},
													"sink": {
														"name": "Exponent",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['publicKey']['modulus']"
													},
													"sink": {
														"name": "Modulus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayAnnotation']"
													},
													"sink": {
														"name": "GatewayAnnotation",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['@odata.context']"
													},
													"sink": {}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "APIs_Datasets",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@{concat('/v1.0/myorg/groups/',item().WorkspaceID,'/datasets/',item().DatasetSourcekey,'/Default.DiscoverGateways')}\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Gateways_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/datasets/APIs_Datasets')]",
				"[concat(variables('factoryId'), '/datasets/Gateways_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateways_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Gateways Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Gateways_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Gateway_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Gateways Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline Gateway",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Gateways",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Gateways Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[Gateways];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Gateway History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GatewayID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GatewayID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GatewaySourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GatewaySourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gateway",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gateway",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GatewayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GatewayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Exponent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Exponent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Modulus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Modulus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Gateway_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GatewayHistory_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Gateway_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/GatewayHistory_SQL')]",
				"[concat(variables('factoryId'), '/pipelines/Gateways')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/InitialDataLoad_MasterPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Capturing LogID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								},
								"ClientId": {
									"value": "@pipeline().parameters.ClientId",
									"type": "Expression"
								},
								"OrganisationId": {
									"value": "@pipeline().parameters.OrganisationId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stored Precodure_startPipelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_StartPipelineExecution]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunningStatus": {
									"value": "",
									"type": "Boolean"
								},
								"StartTime": {
									"value": "",
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing LogID",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Stored Precodure_startPipelineExecution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure_UpdatePIpelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Capturing LogID').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Capturing DataLoadTrackerId",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ClientId": {
						"type": "String",
						"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
					},
					"TenantId": {
						"type": "String",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"AZSecretName": {
						"type": "String",
						"defaultValue": "UBTIClientSecretName"
					},
					"OrganisationId": {
						"type": "String",
						"defaultValue": "001"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]",
				"[concat(variables('factoryId'), '/pipelines/Reports')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PipelineBatch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test for batch pipeline",
						"description": "",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshSchedules')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Refresh Schedule Dataflow",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "get_refresh_schedules_dataflow",
											"type": "DataFlowReference",
											"parameters": {
												"groupid": {
													"value": "'@{item().Workspaceid}'",
													"type": "Expression"
												},
												"datasetid": {
													"value": "'@{item().DatasetSourceKey}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"WorkSpaceID": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													},
													"DatasetID": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dataset_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/dataflows/get_refresh_schedules_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ReportSourceKey,WorkspaceId from [dbo].[Reports]where BatchNo =',pipeline().parameters.BatchNo)\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get ReportPage_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Reportid",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceid",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['order']"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Reportid']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceid']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPages_API",
											"type": "DatasetReference",
											"parameters": {
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPages_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get ReportPages_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get ReportPage_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ReportID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ReportID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ReportPageName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ReportPageDisplayName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "report_order",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPagesLive_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "SQL_ReportPagesLive",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing GetreportPage Staging status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get ReportPage_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "ReportPage Staging Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get ReportPage_Staging').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing Get Reportpages Live Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get ReportPages_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "ReportPages Live Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get ReportPages_Live').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPages Status'),'Succeeded'),\nequals(variables('ReportPages Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Reportspages Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get ReportPage Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get Reports').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_API')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesLive_SQL')]",
				"[concat(variables('factoryId'), '/datasets/SQL_ReportPagesLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ReportPages];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages History Status",
							"value": {
								"value": "@activity('ReportPages History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages Batch Status",
							"value": {
								"value": "@activity('Get ReportPages in Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing ReportPages History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPages Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPage Status'),'Succeeded'),\nequals(variables('ReportPage Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL_History')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ReportPages];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL_History')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ReportsLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ReportPages];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPagesStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPagesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "ReportPages History Status",
									"value": {
										"type": "Expression",
										"content": "@activity('ReportPages History').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "ReportPages Batch Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get ReportPages in Batches').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReportsLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ReportSourceKey,WorkspaceId from [dbo].[Reports_batch] where BatchNo=',pipeline().parameters.BatchNo)\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Report Page Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Reportid",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceid",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['order']"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Reportid']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceid']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPagesAPI_Tenant2",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPages_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Reports').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesAPI_Tenant2')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ReportSourceKey,WorkspaceId from [dbo].[Reports_batch]where BatchNo =',pipeline().parameters.BatchNo)\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ReportsLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get ReportPage_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Reportid",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceid",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['order']"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Reportid']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceid']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPages_API",
											"type": "DatasetReference",
											"parameters": {
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPagesStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get ReportPages_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Get ReportPage_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "upsert",
											"upsertSettings": {
												"useTempDB": true,
												"keys": [
													"ReportID"
												]
											},
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "ReportID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ReportPageName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ReportPageDisplayName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "report_order",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32",
														"physicalType": "int"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ReportsStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPagesLive_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing GetreportPage Staging status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get ReportPage_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ReportPages Staging Status",
										"value": {
											"value": "@activity('Get Reports').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing Get Reportpages Live Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get ReportPages_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "ReportPages Live Status",
										"value": {
											"value": "@activity('Get ReportPages_Live').Status",
											"type": "Expression"
										}
									}
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "ReportID in Loop",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Get Reportspages Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPages Status'),'Succeeded'),\nequals(variables('ReportPages Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Get Reportspages Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get ReportPages Status",
							"value": {
								"value": "@activity('Get Reports').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ReportsLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ReportPages_API')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ReportsStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ReportPagesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ReportSourceKey from [dbo].[Reports]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get ReportUsers Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "ReportID",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												},
												{
													"name": "OrganisationId",
													"value": {
														"value": "@pipeline().parameters.OrganisationId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "Truncate Table [dbo].[ReportUsers]",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['reportUserAccessRight']"
													},
													"sink": {
														"name": "ReportUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "ReportUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReportID']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['OrganisationId']"
													},
													"sink": {
														"name": "OrganisationID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "GetReportUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Reports').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "string",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"OrganisationId": {
						"type": "string",
						"defaultValue": "001"
					}
				},
				"variables": {
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ReportUsers_API')]",
				"[concat(variables('factoryId'), '/datasets/GetReportUsers_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Reports Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Report History Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Report Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Reports Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Report History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status for Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Reports Staging Status'),'Succeeded'),\nequals(variables('Report Live Status'),'Succeeded')),\nequals(variables('Report History Status'),'Succeeded')),\n    'Succeeded','Failed')\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status for Reports Staging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Reports Staging Status",
							"value": {
								"value": "@activity('Reports Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Report History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Report History Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Report History Status",
							"value": {
								"value": "@activity('Report History Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Reports Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Report Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Report Live Status",
							"value": {
								"value": "@activity('Report Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_API')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Reports Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_API_Tenant2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Reports]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Reports Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_API_Tenant2')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL')]",
				"[concat(variables('factoryId'), '/datasets/Reports_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Reports Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportsLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportsHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Report History Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Report Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Reports Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Report History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status for Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('Reports Staging Status'),'Succeeded'),\nequals(variables('Report Live Status'),'Succeeded')),\nequals(variables('Report History Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"DataLoadTrackerID": {
									"value": null,
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status for Reports Staging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Reports Staging Status",
							"value": {
								"value": "@activity('Reports Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Report History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Report History Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Report History Status",
							"value": {
								"value": "@activity('Report History Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Reports Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Report Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Report Live Status",
							"value": {
								"value": "@activity('Report Live Data').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Reports_API')]",
				"[concat(variables('factoryId'), '/datasets/ReportsStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ReportsLive_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ReportsHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_WorkspacesAPI')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test_Workspaces",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['datasets'][0]['isRefreshable']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['isEffectiveIdentityRequired']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['isEffectiveIdentityRolesRequired']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['targetStorageMode']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['createdDate']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['contentProviderType']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['upstreamDatasets'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['users'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['datasets'][0]['isInPlaceSharingEnabled']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['dataflows'][0]"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['users'][0]['emailAddress']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['users'][0]['groupUserAccessRight']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['users'][0]['displayName']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['users'][0]['identifier']"
										},
										"sink": {}
									},
									{
										"source": {
											"path": "[['users'][0]['principalType']"
										},
										"sink": {}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Test_Workspaces",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Test_WorkspacesSQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "In Progress Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "InProgress Status",
							"value": {
								"value": "@variables('Status')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_StartPipelineExecution]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunningStatus": {
									"value": "False",
									"type": "Boolean"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Stored procedure1_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Lookup1').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "LID",
							"value": ""
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Lookup1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 60
						}
					},
					{
						"name": "Lookup1",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Stored procedure1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure1_copy1_copy1",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Lookup1').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"value": {
										"value": "@variables('Status')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"ClientID": {
						"type": "String"
					},
					"V1": {
						"type": "String"
					},
					"V2": {
						"type": "String"
					},
					"V3": {
						"type": "String"
					},
					"V4": {
						"type": "String"
					},
					"V6": {
						"type": "String"
					},
					"V7": {
						"type": "String"
					},
					"Status": {
						"type": "String"
					},
					"ExecutionStartTime": {
						"type": "String"
					},
					"ExecutionEndTime": {
						"type": "String"
					},
					"Workspaces Status": {
						"type": "String"
					},
					"Workspaces_Execution StartTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Test_Workspaces')]",
				"[concat(variables('factoryId'), '/datasets/Test_WorkspacesSQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_variable')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait2",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Wait3",
						"type": "Wait",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 1
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Wait1",
							"value": "[[object Object]"
						}
					},
					{
						"name": "Set variable2",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Wait2",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Wait2",
							"value": {
								"value": "@activity('Wait2').Duration",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Set variable3",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Wait3",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Wait3",
							"value": {
								"value": "@activity('Wait3').Duration",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Wait1": {
						"type": "String"
					},
					"Wait2": {
						"type": "String"
					},
					"Wait3": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Upset Master Pipelines Execution')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Capturing LogID",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								},
								"ClientId": {
									"value": "@pipeline().parameters.ClientId",
									"type": "Expression"
								},
								"OrganisationId": {
									"value": "@pipeline().parameters.OrganisationId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Stored Precodure_startPipelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_StartPipelineExecution]",
							"storedProcedureParameters": {
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunningStatus": {
									"value": "False",
									"type": "Boolean"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing LogID",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Stored Precodure_startPipelineExecution",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTable1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Stored procedure_UpdatePIpelineExecution",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_UpdatePipelineExecutionStatus]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogID": {
									"value": {
										"value": "@activity('Capturing LogID').output.count",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"RunningStatus": {
									"value": "True",
									"type": "Boolean"
								},
								"Status": {
									"value": "Success",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ClientId": {
						"type": "String",
						"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
					},
					"TenantId": {
						"type": "String",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"AZSecretName": {
						"type": "String",
						"defaultValue": "UBTIClientSecretName"
					},
					"OrganisationId": {
						"type": "String",
						"defaultValue": "001"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]",
				"[concat(variables('factoryId'), '/pipelines/Reports')]",
				"[concat(variables('factoryId'), '/pipelines/ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/Datasets')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetUsers_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlows')]",
				"[concat(variables('factoryId'), '/pipelines/DatasetRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DataFlowRefreshes_Batch')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/AzureSqlTable1')]",
				"[concat(variables('factoryId'), '/pipelines/ViewReports')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Activity Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ViewReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportLive_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "View Activity History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing status ViewActivity Statging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing  ViewReports History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status ViewReport Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildpipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('ViewReportStaging Status'),'Succeeded'),\nequals(variables('ViewReport Live Status'),'Succeeded')),\nequals(variables('ViewReport Live Status'),'Succeeded')),\n    'Succeeded','Failed')\n",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View Activity Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Execute ChildpipelineLogs",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.ViewReports_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityId']"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityName']"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactKind']"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshEnforcementPolicy']"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['continuationUri']"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastResultSet']"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']"
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Execute ChildpipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": true
						}
					},
					{
						"name": "Capturing status ViewActivity Statging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReportStaging Status",
							"value": {
								"value": "@activity('View Activity Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status ViewReport Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReport Live Status",
							"value": {
								"value": "@activity('View Activity Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing  ViewReports History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReport History Status",
							"value": {
								"value": "@activity('View Activity History').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"LastRefreshedTime": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T09:03:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ViewReports_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ViewReportLive_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ViewReports_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ViewReports_API')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Activity Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[ViewReports]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ViewReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportLive_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "View Activity History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('View Activity Live Data').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View Activity Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.ViewReports_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityId']"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityName']"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactKind']"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshEnforcementPolicy']"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['continuationUri']"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastResultSet']"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']"
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReportsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantID": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"LastRefreshedTime": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T09:03:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ViewReports_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ViewReportLive_SQL')]",
				"[concat(variables('factoryId'), '/datasets/ViewReports_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ViewReportsAPI')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Activity Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ViewReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportLive_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "View Activity History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportsHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing status ViewActivity Statging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing  ViewReports History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status ViewReport Live Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('View Activity Live Data').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('ViewReportStaging Status'),'Succeeded'),\nequals(variables('ViewReport Live Status'),'Succeeded')),\nequals(variables('ViewReport Live Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantId": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View Activity Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Checking data Avalability inViewReports_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.ViewReports_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityId']"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityName']"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactKind']"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshEnforcementPolicy']"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['continuationUri']"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastResultSet']"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']"
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportsStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Checking data Avalability inViewReports_Staging",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ls_ds_ViewRports_staging",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Capturing status ViewActivity Statging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReportStaging Status",
							"value": {
								"value": "@activity('View Activity Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status ViewReport Live Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReport Live Status",
							"value": {
								"value": "@activity('View Activity Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing  ViewReports History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ViewReport History Status",
							"value": {
								"value": "@activity('View Activity History').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"LastRefreshedTime": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T09:03:18Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ViewReportsStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ViewReportLive_Sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/ViewReportsHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/ViewReports_API')]",
				"[concat(variables('factoryId'), '/datasets/Ls_ds_ViewRports_staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces with multiple data')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].[WorkSpaces_Staging];",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "APIs_Datasets",
								"type": "DatasetReference",
								"parameters": {
									"RelativeURL": {
										"value": "@{concat('v1.0/myorg/admin/groups?$top=5000&$expand=users,reports,datasets')}",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/APIs_Datasets')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Execute_ChildLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].[WorkSpaces_Staging];\n\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capture the StartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute_ChildLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('WorkspacesStaging Status'),'Succeeded'),\nequals(variables('WorkSpaceHistory Status'),'Succeeded')),\nequals(variables('WorkSpaceLive Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_Childpipeline Tracker Insert",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Insert]",
							"storedProcedureParameters": {
								"DataLoadTrackerId": {
									"value": "",
									"type": "String"
								},
								"EndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"LogTrackerId": {
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": "Started",
									"type": "String"
								},
								"TenantId": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "Int32"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status of WorkSpaceStaging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkspacesStaging Status",
							"value": {
								"value": "@activity('WorkSpace Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status of WorkSpaceLive",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceLive Status",
							"value": {
								"value": "@activity('WorkSpace Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status of WorkSpaceHistory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceHistory Status",
							"value": {
								"value": "@activity('WorkSpace History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capture the StartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceStartTime",
							"value": {
								"value": "@activity('WorkSpace Staging').ExecutionStartTime",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capture the WorkSpaceEndTime",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpacesEndTime",
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute_ChildLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					}
				],
				"concurrency": 2,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string",
						"defaultValue": "9049e040-2bf1-47a2-ad39-e23869af08ff"
					},
					"AppClientId": {
						"type": "string",
						"defaultValue": "3a8df53a-9873-4e70-9d69-4725460c62b8"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"variables": {
					"WorkspacesStaging Status": {
						"type": "String"
					},
					"Workspaces_StartTime": {
						"type": "String"
					},
					"Workspaces_EndTime": {
						"type": "String"
					},
					"Workspaces_IST": {
						"type": "String"
					},
					"Workspaces_IST2": {
						"type": "String"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"WorkSpaceLive Status": {
						"type": "String"
					},
					"WorkSpaceHistory Status": {
						"type": "String"
					},
					"WorkSpaceStartTime": {
						"type": "String"
					},
					"WorkSpacesEndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_API')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpaces",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces_batch] \nwhere BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "WorkSpace ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get WorkSpace Users_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['userType']"
													},
													"sink": {
														"name": "UserType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsers_Staging_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkspaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get WorkSpaceUsers_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Wait to WorkspaceUsers Staging complete",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "GroupUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "LS_SQL_WorkspacesUsers_Live",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpacesUsers_Live_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing Status in WorkSpace Users Staging",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get WorkSpace Users_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "WorkspaceUsers Staging Staus",
												"value": {
													"type": "Expression",
													"content": "@activity('Get WorkSpace Users_Staging').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Capturing Status in WorkSpaceUsers Live",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get WorkSpaceUsers_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "pipelineReturnValue",
										"value": [
											{
												"key": "WorkSpaceUserLive Status",
												"value": {
													"type": "Expression",
													"content": "@activity('Get WorkSpaceUsers_Live').Status"
												}
											}
										],
										"setSystemVariable": true
									}
								},
								{
									"name": "Wait to WorkspaceUsers Staging complete",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Get WorkSpace Users_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 60
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": "",
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Workspaces Status'),'Succeeded'),\nequals(variables('WorkspaceUsers Staging Staus'),'Succeeded')),\nequals(variables('WorkSpaceUserLive Status'),'Succeeded')),\nequals(variables('WorkSpaces Batch'),'Succeeded')),\nequals(variables('WorkSpacesUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status for Get WorkSpaces",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get Workspaces Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get WorkSpaces').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_Staging_API')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL')]",
				"[concat(variables('factoryId'), '/datasets/LS_SQL_WorkspacesUsers_Live')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpacesUsers_Live_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpace Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_ChildPipelinelogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct BatchNo from [dbo].[Workspaces_batch] ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpace Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute pipeline users",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpacesUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "WorkSpaceUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkspacesUsers",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getreports_sql_ds",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[WorkSpaces_Staging];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Capturing Workspaces Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get WorkSpaces Batch Status",
							"value": {
								"value": "@activity('Get WorkSpace Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status in WorkSpaces Users History",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpaceUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpacesUsers History Status",
							"value": {
								"value": "@activity('WorkSpaceUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute_ChildPipelinelogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpaceUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status in WorkSpaces Users History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Workspaces Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute_ChildPipelinelogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Workspaces Status'),'Succeeded'),\nequals(variables('WorkspaceUsers Staging Staus'),'Succeeded')),\nequals(variables('WorkSpaceUserLive Status'),'Succeeded')),\nequals(variables('WorkSpaces Batch'),'Succeeded')),\nequals(variables('WorkSpacesUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports_Staging_IST": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]",
				"[concat(variables('factoryId'), '/datasets/Execute_ChildPipelineLogs')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpace Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct BatchNo from [dbo].[Workspaces_batch] ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpace Batches').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute pipeline users",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpacesUsers_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											},
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "WorkSpaceUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkspacesUsers",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getreports_sql_ds",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[WorkSpaceUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports_Staging_IST": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpace Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct BatchNo from [dbo].[Workspaces_batch] ORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceLive_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpace Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute pipeline users",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpacesUsers_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "WorkSpaceUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceUsersStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceUsersHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkspacesUsers",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getreports_sql_ds",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[WorkSpaces_Staging];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Capturing Workspaces Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "Get WorkSpaces Batch Status",
									"value": {
										"type": "Expression",
										"content": "@activity('Get WorkSpace Batches').status"
									}
								}
							],
							"setSystemVariable": true
						}
					},
					{
						"name": "Capturing Status in WorkSpaces Users History",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpaceUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "pipelineReturnValue",
							"value": [
								{
									"key": "WorkSpacesUsers History Status",
									"value": {
										"type": "Expression",
										"content": "@activity('WorkSpaceUsers History').Status"
									}
								}
							],
							"setSystemVariable": true
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports_Staging_IST": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaceLive_Sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsersStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsersHistory_sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpaces",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces_batch] where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "WorkSpace ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get WorkSpace Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['userType']"
													},
													"sink": {
														"name": "UserType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsers_Api_Tenant2",
											"type": "DatasetReference",
											"parameters": {
												"WorkspaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get WorkSpaces').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string",
						"defaultValue": "1"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_Api_Tenant2')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpaces",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces_batch] \nwhere BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceLive_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "WorkSpace ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get WorkSpace Users_Staging",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['userType']"
													},
													"sink": {
														"name": "UserType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsers_Staging_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkspaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsersStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Get WorkSpaceUsers_Live",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "Wait to WorkspaceUsers Staging complete",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"dataIntegrationUnits": 4,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserName",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "Identifier",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "UserType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "GroupUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "CreatedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													},
													"sink": {
														"name": "ModifiedDate",
														"type": "DateTime",
														"physicalType": "datetime"
													}
												},
												{
													"source": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "CreatedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													},
													"sink": {
														"name": "ModifiedBy",
														"type": "String",
														"physicalType": "varchar"
													}
												},
												{
													"source": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32",
														"physicalType": "int"
													}
												}
											],
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsersStaging_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsersLive_sql_UAT",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								},
								{
									"name": "Capturing Status in WorkSpace Users Staging",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get WorkSpace Users_Staging",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "WorkspaceUsers Staging Staus",
										"value": {
											"value": "@activity('Get WorkSpace Users_Staging').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Capturing Status in WorkSpaceUsers Live",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "Get WorkSpaceUsers_Live",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "WorkSpaceUserLive Status",
										"value": {
											"value": "@activity('Get WorkSpaceUsers_Live').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Wait to WorkspaceUsers Staging complete",
									"type": "Wait",
									"dependsOn": [
										{
											"activity": "Get WorkSpace Users_Staging",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"waitTimeInSeconds": 2
									}
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status for Get WorkSpaces",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@activity('Get WorkSpaces').ExecutionStartTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Workspaces Status'),'Succeeded'),\nequals(variables('WorkspaceUsers Staging Staus'),'Succeeded')),\nequals(variables('WorkSpaceUserLive Status'),'Succeeded')),\nequals(variables('WorkSpaces Batch'),'Succeeded')),\nequals(variables('WorkSpacesUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantId": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "Int32"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": null,
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": null,
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status for Get WorkSpaces",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Workspaces Status",
							"value": {
								"value": "@activity('Get WorkSpaces').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					},
					"BatchNo": {
						"type": "string",
						"defaultValue": "@item().BatchNo"
					}
				},
				"variables": {
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaceLive_Sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsers_Staging_API')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsersStaging_sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceUsersLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "\n\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceApI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('WorkSpace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Workspace Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Workspace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 2,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Workspaces_Status": {
						"type": "String"
					},
					"Workspaces_StartTime": {
						"type": "String"
					},
					"Workspaces_EndTime": {
						"type": "String"
					},
					"Workspaces_IST": {
						"type": "String"
					},
					"Workspaces_IST2": {
						"type": "String"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaceApI')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_Staging')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_SQL_History')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].[WorkSpaces_Staging];\n\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpacesStaging_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpacesStaging_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceLive_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpacesStaging_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceHistory_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capture the StartTime",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@activity('WorkSpace Staging').ExecutionStartTime\n\n\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('WorkspacesStaging Status'),'Succeeded'),\nequals(variables('WorkSpaceHistory Status'),'Succeeded')),\nequals(variables('WorkSpaceLive Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantId": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									}
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(\nequals(variables('WorkspacesStaging Status'),'Succeeded'),\nequals(variables('WorkSpaceHistory Status'),'Succeeded')),\nequals(variables('WorkSpaceLive Status'),'Succeeded')),\n    'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Capturing Status of WorkSpaceStaging",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkspacesStaging Status",
							"value": {
								"value": "@activity('WorkSpace Staging').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status of WorkSpaceLive",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceLive Status",
							"value": {
								"value": "@activity('WorkSpace Live Data').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status of WorkSpaceHistory",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceHistory Status",
							"value": {
								"value": "@activity('WorkSpace History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capture the StartTime",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpaceStartTime",
							"value": {
								"value": "@activity('WorkSpace Staging').ExecutionStartTime",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capture the WorkSpaceEndTime",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpacesEndTime",
							"value": {
								"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
								"type": "Expression"
							}
						}
					}
				],
				"concurrency": 2,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string",
						"defaultValue": "9049e040-2bf1-47a2-ad39-e23869af08ff"
					},
					"AppClientId": {
						"type": "string",
						"defaultValue": "3a8df53a-9873-4e70-9d69-4725460c62b8"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 2
					}
				},
				"variables": {
					"WorkspacesStaging Status": {
						"type": "String"
					},
					"Workspaces_StartTime": {
						"type": "String"
					},
					"Workspaces_EndTime": {
						"type": "String"
					},
					"Workspaces_IST": {
						"type": "String"
					},
					"Workspaces_IST2": {
						"type": "String"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					},
					"WorkSpaceLive Status": {
						"type": "String"
					},
					"WorkSpaceHistory Status": {
						"type": "String"
					},
					"WorkSpaceStartTime": {
						"type": "String"
					},
					"WorkSpacesEndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Child Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/WorkSpaces_API')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpacesStaging_Sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceLive_Sql_UAT')]",
				"[concat(variables('factoryId'), '/datasets/WorkSpaceHistory_Sql_UAT')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ADF_Pipeline_Status_Log')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceUsers_RunStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_WorkspacesUsers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineName": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').output",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test_Workspaces",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Rest_Workspaces",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_Sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Storedprocedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Test_Workspaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Test_Workspaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Rest_Workspaces')]",
				"[concat(variables('factoryId'), '/datasets/Azure_Sql')]",
				"[concat(variables('factoryId'), '/linkedServices/ADF_Pipeline_Status_Log')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup1",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "exec [dbo].[DataLoadTrack_Insert] \"9049e040-2bf1-47a2-ad39-e23869af08ff\",\"3a8df53a-9873-4e70-9d69-4725460c62b8\"\n,\"N9e8Q~NRLsIYTg2832J3f38T~qAwIhy3a.QTya_~\",\"53aad6f3-7954-47a2-8474-8d2f1c9ddcdc\", \"2024-12-18 11:59:48.313\",null,\n\"Started\",\"Started\",\"True\",\"Application\",null,null,'22',''",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQL_SP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQL_SP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Set variable1",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "a",
							"value": {
								"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Stored procedure1",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Wait1",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute_SP').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_SP').Status",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Execute_ChildPipelineLogs",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Wait1",
						"type": "Wait",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"waitTimeInSeconds": 2
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "string",
						"defaultValue": "22"
					},
					"AppTenantId": {
						"type": "String"
					},
					"AppClientId": {
						"type": "String"
					},
					"AppClientCode": {
						"type": "String"
					}
				},
				"variables": {
					"a": {
						"type": "String"
					}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSQL_SP')]",
				"[concat(variables('factoryId'), '/linkedServices/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_adf_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve_Client_Value",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TenantId,AppClientId,AppTenantId,AppClientSecret,CreatedAt from [dbo].[ClientInformation] \nORDER BY CreatedAt DESC\nOFFSET 0 ROWS FETCH NEXT 1 ROW \nONLY;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Azure_Sql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IterateClientValue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "RetrieveClientValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RetrieveClientValue').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecutePipelineTestWorkspace",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpaces_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"TenantId": {
												"value": "@item().TenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppTenantId": {
												"value": "@item().AppTenantId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "RetrieveClientValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TenantId,AppClientId,AppTenantId,AppClientSecret,CreatedAt from [dbo].[ClientInformation] \nORDER BY CreatedAt DESC\nOFFSET 0 ROWS FETCH NEXT 1 ROW \nONLY;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "RetriveClientInformation",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"clientID": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"AppClientId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Azure_Sql')]",
				"[concat(variables('factoryId'), '/datasets/RetriveClientInformation')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces_Tenant2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_adf_orchestration_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve_Client_Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IterateClientValue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve_Client_Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve_Client_Value').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 4,
							"activities": [
								{
									"name": "ExecutePipelineTestWorkspace",
									"type": "ExecutePipeline",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpaces",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ClientId": {
												"value": "@item().ClientId",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TenantId",
												"type": "Expression"
											},
											"AZSecretName": {
												"value": "@item().AZSecretName",
												"type": "Expression"
											},
											"OrganisationId": {
												"value": "@item().OrganisationId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Web_Activity",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"content-type": {
												"value": "application/json",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelines/',pipeline().parameters.PipelineName,'/createRun?api-version=2018-06-01')",
											"type": "Expression"
										},
										"body": {
											"value": "{}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								},
								{
									"name": "Web_Activity_copy1",
									"type": "WebActivity",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"content-type": {
												"value": "application/json",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelines/',pipeline().parameters.PipelineName,'/createRun?api-version=2018-06-01')",
											"type": "Expression"
										},
										"body": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "a683694f-e3fc-4cd0-8f1d-b63f8ff20604"
					},
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "ubti-d-wind-PBIMonitor"
					},
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "ubtiPBIMonitor"
					},
					"PipelineName": {
						"type": "string"
					}
				},
				"variables": {
					"clientID": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/AzureSqlTableDS')]",
				"[concat(variables('factoryId'), '/pipelines/WorkSpaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/APIs_Datasets')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "BaseURl_LS",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"RelativeURL": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": {
						"value": "@dataset().RelativeURL",
						"type": "Expression"
					}
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/BaseURl_LS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQL_SP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Sql_Workspaces",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Sql_Workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTable1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "us_capturefirestrowlookup_Ls",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "LogID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "PipelineName",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "RunID",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RunningStatus",
						"type": "bit"
					},
					{
						"name": "CompleteStatus",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataLoadTracker"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/us_capturefirestrowlookup_Ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlTableDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSqlDatabaseLS",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ClientId",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "ClientSecret",
						"type": "varchar"
					},
					{
						"name": "OrganisationId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUser"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabaseLS')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_Sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Azure_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ClientInformation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Azure_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capacities')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getCapacities",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getCapacities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capacities_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Capacities_History",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CapacitiesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CapacitiesSourceskey",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "Admins",
						"type": "varchar"
					},
					{
						"name": "Sku",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "CapacityUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CapacitiesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Capacities_History')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capacities_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getCapacities_",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CapacitiesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CapacitiesSourceskey",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "Admins",
						"type": "varchar"
					},
					{
						"name": "Sku",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "CapacityUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Capacities"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getCapacities_')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capacities_SQL_Live')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "get_Capacities",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "CapacitiesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CapacitiesSourceskey",
						"type": "varchar"
					},
					{
						"name": "DisplayName",
						"type": "varchar"
					},
					{
						"name": "Admins",
						"type": "varchar"
					},
					{
						"name": "Sku",
						"type": "varchar"
					},
					{
						"name": "State",
						"type": "varchar"
					},
					{
						"name": "CapacityUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "Region",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Capacities_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/get_Capacities')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdataflow_refreshes_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DataFlowID": {
							"value": "@dataset().DataFlowID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DataFlowID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdataflow_refreshes_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "workspace_id",
						"type": "varchar"
					},
					{
						"name": "dataflow_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "refreshType",
						"type": "varchar"
					},
					{
						"name": "startTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "endTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "workspace_id",
						"type": "varchar"
					},
					{
						"name": "dataflow_id",
						"type": "varchar"
					},
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "refreshType",
						"type": "varchar"
					},
					{
						"name": "startTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "endTime",
						"type": "datetime2",
						"scale": 7
					},
					{
						"name": "status",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdataflow_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdataflow_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "objectId",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dataflows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "objectId",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlow_SQL_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "objectId",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dataflows_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowsAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_Dataflow",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_Dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowName",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowName",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dataflows"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_Dataflowrefreshes",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DataFlowID": {
							"value": "@dataset().DataFlowID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DataFlowID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_Dataflowrefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowRefreshesHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowRefreshesSourcekey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowRefreshesHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowRefreshesLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowRefreshesSourcekey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowRefreshesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowRefreshesStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowRefreshesSourcekey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowRefreshesStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataflowStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowName",
						"type": "varchar"
					},
					{
						"name": "Description",
						"type": "varchar"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Dataflows_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataflowStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkspaceId",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "DatasetWebUrl",
						"type": "varchar"
					},
					{
						"name": "AddRowsAPIEnabled",
						"type": "bit"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "IsRefreshable",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRequired",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRolesRequired",
						"type": "bit"
					},
					{
						"name": "TargetStorageMode",
						"type": "varchar"
					},
					{
						"name": "ContentProviderType",
						"type": "varchar"
					},
					{
						"name": "CreateReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "QNAEmbedURL",
						"type": "varchar"
					},
					{
						"name": "IsInPlaceSharingEnabled",
						"type": "bit"
					},
					{
						"name": "AutoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "MaxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetsHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkspaceId",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "DatasetWebUrl",
						"type": "varchar"
					},
					{
						"name": "AddRowsAPIEnabled",
						"type": "bit"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "IsRefreshable",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRequired",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRolesRequired",
						"type": "bit"
					},
					{
						"name": "TargetStorageMode",
						"type": "varchar"
					},
					{
						"name": "ContentProviderType",
						"type": "varchar"
					},
					{
						"name": "CreateReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "QNAEmbedURL",
						"type": "varchar"
					},
					{
						"name": "IsInPlaceSharingEnabled",
						"type": "bit"
					},
					{
						"name": "AutoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "MaxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Datasets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_Datasetrefreshes",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DatasetID": {
							"value": "@dataset().DatasetID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DatasetID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_Datasetrefreshes')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetRefreshesHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetRefreshesSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetRefreshesHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetRefreshesLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetRefreshesSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetRefreshesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetRefreshesStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetRefreshesSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetRefreshesStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "get_dataset_refrehses_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DatasetID": {
							"value": "@dataset().DatasetID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DatasetID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/get_dataset_refrehses_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkspaceId",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "DatasetWebUrl",
						"type": "varchar"
					},
					{
						"name": "AddRowsAPIEnabled",
						"type": "bit"
					},
					{
						"name": "ConfiguredBy",
						"type": "varchar"
					},
					{
						"name": "IsRefreshable",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRequired",
						"type": "bit"
					},
					{
						"name": "IsEffectiveIdentityRolesRequired",
						"type": "bit"
					},
					{
						"name": "TargetStorageMode",
						"type": "varchar"
					},
					{
						"name": "ContentProviderType",
						"type": "varchar"
					},
					{
						"name": "CreateReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "QNAEmbedURL",
						"type": "varchar"
					},
					{
						"name": "IsInPlaceSharingEnabled",
						"type": "bit"
					},
					{
						"name": "AutoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "MaxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Datasets_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUserHistory_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetuserHistory_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsersHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetuserHistory_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_DatasetUsers",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DatasetID": {
							"value": "@dataset().DatasetID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DatasetID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_DatasetUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetUsersHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsersHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetUsersHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetUsersLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetUsersLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetUsersStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetUsersStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdatasetusers_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"DatasetID": {
							"value": "@dataset().DatasetID",
							"type": "Expression"
						},
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"DatasetID": {
						"type": "string"
					},
					"WorkSpaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdatasetusers_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_sql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DatasetUsers_sql",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DatasetUsers_sql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdataset_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdataset_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "webUrl",
						"type": "varchar"
					},
					{
						"name": "addRowsAPIEnabled",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "isRefreshable",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRequired",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRolesRequired",
						"type": "varchar"
					},
					{
						"name": "targetStorageMode",
						"type": "varchar"
					},
					{
						"name": "createdDate",
						"type": "varchar"
					},
					{
						"name": "contentProviderType",
						"type": "varchar"
					},
					{
						"name": "createReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "qnaEmbedURL",
						"type": "varchar"
					},
					{
						"name": "isInPlaceSharingEnabled",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "autoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "maxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Datasets"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "webUrl",
						"type": "varchar"
					},
					{
						"name": "addRowsAPIEnabled",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "isRefreshable",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRequired",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRolesRequired",
						"type": "varchar"
					},
					{
						"name": "targetStorageMode",
						"type": "varchar"
					},
					{
						"name": "createdDate",
						"type": "varchar"
					},
					{
						"name": "contentProviderType",
						"type": "varchar"
					},
					{
						"name": "createReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "qnaEmbedURL",
						"type": "varchar"
					},
					{
						"name": "isInPlaceSharingEnabled",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "autoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "maxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetsHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dataset_SQL_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "webUrl",
						"type": "varchar"
					},
					{
						"name": "addRowsAPIEnabled",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "isRefreshable",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRequired",
						"type": "varchar"
					},
					{
						"name": "isEffectiveIdentityRolesRequired",
						"type": "varchar"
					},
					{
						"name": "targetStorageMode",
						"type": "varchar"
					},
					{
						"name": "createdDate",
						"type": "varchar"
					},
					{
						"name": "contentProviderType",
						"type": "varchar"
					},
					{
						"name": "createReportEmbedURL",
						"type": "varchar"
					},
					{
						"name": "qnaEmbedURL",
						"type": "varchar"
					},
					{
						"name": "isInPlaceSharingEnabled",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "autoSyncReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "maxReadOnlyReplicas",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Datasets_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetsAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_Datasets",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_Datasets')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasources_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "datasetUserAccessRight",
						"type": "nvarchar"
					},
					{
						"name": "identifier",
						"type": "nvarchar"
					},
					{
						"name": "principalType",
						"type": "nvarchar"
					},
					{
						"name": "DatasetID",
						"type": "nvarchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Datasources"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoWorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_WorkSpaceUsers",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceDescription",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceType",
						"type": "varchar"
					},
					{
						"name": "IsonDedicatedCapacity",
						"type": "bit"
					},
					{
						"name": "CapacityMigrationStatus",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "IsReadOnly",
						"type": "bit"
					},
					{
						"name": "HasWorkspaceLevelSetting",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DemoWorkSpaces"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_WorkSpaceUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoWorkSpaceUsers_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DemoWorkSpaceUsers",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceUserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "GroupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DemoWorkSpaceUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DemoWorkSpaceUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DemoWorkSpaces_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_DemoWorkSpaceUsers",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_DemoWorkSpaceUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute_ChildPipelineLogs')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Execute_ChildPipelineLogs",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Execute_ChildPipelineLogs')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GatewayHistory_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "datasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "emailAddress",
						"type": "varchar"
					},
					{
						"name": "displayName",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graphId",
						"type": "varchar"
					},
					{
						"name": "principalType",
						"type": "varchar"
					},
					{
						"name": "userType",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "GatewayHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateway_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "datasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "emailAddress",
						"type": "varchar"
					},
					{
						"name": "displayName",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graphId",
						"type": "varchar"
					},
					{
						"name": "principalType",
						"type": "varchar"
					},
					{
						"name": "userType",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Gateways"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateways_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "objectId",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "description",
						"type": "varchar"
					},
					{
						"name": "workspaceId",
						"type": "varchar"
					},
					{
						"name": "configuredBy",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Gateways"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetReportUsers_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "report_user_access_right",
						"type": "varchar"
					},
					{
						"name": "email_address",
						"type": "varchar"
					},
					{
						"name": "display_name",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graph_id",
						"type": "varchar"
					},
					{
						"name": "principal_type",
						"type": "varchar"
					},
					{
						"name": "user_type",
						"type": "varchar"
					},
					{
						"name": "report_id",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ExecuteSP_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ExecuteSP_UAT",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ExecuteSP_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DemoWorkspaces",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceDescription",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceType",
						"type": "varchar"
					},
					{
						"name": "IsonDedicatedCapacity",
						"type": "bit"
					},
					{
						"name": "CapacityMigrationStatus",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "IsReadOnly",
						"type": "bit"
					},
					{
						"name": "HasWorkspaceLevelSetting",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DemoWorkSpaces"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DemoWorkspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_WorkspacesUsers_Live')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_WorkSpacesStaging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceUserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "GroupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_WorkSpacesStaging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_API_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_Workspaces",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_Workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_ds_ViewRports_staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Ds_SQL_ViewReports_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReports_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Ds_SQL_ViewReports_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshSchedules_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "get_refresh_schedules_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"DatasetID": {
							"value": "@dataset().DatasetID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DatasetID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/get_refresh_schedules_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshSchedules_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "index_no",
						"type": "int",
						"precision": 10
					},
					{
						"name": "dataset_id",
						"type": "varchar"
					},
					{
						"name": "workspace_id",
						"type": "varchar"
					},
					{
						"name": "days",
						"type": "varchar"
					},
					{
						"name": "times",
						"type": "varchar"
					},
					{
						"name": "enabled",
						"type": "varchar"
					},
					{
						"name": "localTimeZoneId",
						"type": "varchar"
					},
					{
						"name": "notifyOption",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "RefreshSchedules"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Refreshables_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getrefreshables_api_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getrefreshables_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesAPI_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Api_ReportPages",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"ReportID": {
							"value": "@dataset().ReportID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"ReportID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Api_ReportPages')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportPagesHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportPageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "ReportPageName",
						"type": "varchar"
					},
					{
						"name": "ReportPageDisplayName",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPagesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportPagesHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesLive_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_ReportPagesLive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportPageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "ReportPageName",
						"type": "varchar"
					},
					{
						"name": "ReportPageDisplayName",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPages_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_ReportPagesLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportPagesLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportPageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "ReportPageName",
						"type": "varchar"
					},
					{
						"name": "ReportPageDisplayName",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportPagesLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportPagesStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportPageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "ReportPageName",
						"type": "varchar"
					},
					{
						"name": "ReportPageDisplayName",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPages_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportPagesStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreport_pages_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"ReportID": {
							"value": "@dataset().ReportID",
							"type": "Expression"
						},
						"WorkSpaceID": {
							"value": "@dataset().WorkSpaceID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ReportID": {
						"type": "string"
					},
					"WorkSpaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreport_pages_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "report_id",
						"type": "varchar"
					},
					{
						"name": "workspace_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "displayame",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPages_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "report_id",
						"type": "varchar"
					},
					{
						"name": "workspace_id",
						"type": "varchar"
					},
					{
						"name": "name",
						"type": "varchar"
					},
					{
						"name": "displayame",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPagesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportUsers_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getusers_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"ReportID": {
							"value": "@dataset().ReportID",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"ReportID": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getusers_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "nvarchar"
					},
					{
						"name": "ReportWebUrl",
						"type": "varchar"
					},
					{
						"name": "ReportEmbedUrl",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportsHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportsLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "nvarchar"
					},
					{
						"name": "ReportWebUrl",
						"type": "varchar"
					},
					{
						"name": "ReportEmbedUrl",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Reports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportsLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "nvarchar"
					},
					{
						"name": "ReportWebUrl",
						"type": "varchar"
					},
					{
						"name": "ReportEmbedUrl",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Reports_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreports_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreports_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_API_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_Api_Reports",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_Api_Reports')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreports_sql_ds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "Reports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreports_sql_ds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportsHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_SQL_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreports_sql_ds",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "ReportWebUrl",
						"type": "nvarchar"
					},
					{
						"name": "ReportEmbedUrl",
						"type": "nvarchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Reports_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreports_sql_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Rest_workspaces",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Rest_workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetriveClientInformation')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "RetriveClientInformation",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "TenantId",
						"type": "varchar"
					},
					{
						"name": "AppClientId",
						"type": "varchar"
					},
					{
						"name": "AppTenantId",
						"type": "varchar"
					},
					{
						"name": "AppClientSecret",
						"type": "varchar"
					},
					{
						"name": "AppRedirectUri",
						"type": "varchar"
					},
					{
						"name": "AppSourceId",
						"type": "varchar"
					},
					{
						"name": "OwnerEmailId",
						"type": "varchar"
					},
					{
						"name": "OwnerName",
						"type": "varchar"
					},
					{
						"name": "OrganizationName",
						"type": "varchar"
					},
					{
						"name": "IsFirstTimeLoad",
						"type": "bit"
					},
					{
						"name": "IsActive",
						"type": "bit"
					},
					{
						"name": "CreatedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "UpdatedBy",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UpdatedAt",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ClientInformation"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/RetriveClientInformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DataFlowRefeshLive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DataFlowRefreshLive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DataFlowRefreshLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DataFlowRefreshLive_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DataFlowRefeshLive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DataflowRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataflowRefreshesSourcekey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DataflowID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DataflowRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DataFlowRefeshLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DatasetRefreshesLive_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DatasetRefreshesLive_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetRefreshesSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshes_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DatasetRefreshesLive_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DatasetUsersLive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DatasetUsers_Live",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DatasetUsers_Live')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_DatasetUsers_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DatasetUsersLive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetUserID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "DatasetUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetUsers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DatasetUsersLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQL_ReportPagesLive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ReportPages_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ReportPageID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "ReportPageName",
						"type": "varchar"
					},
					{
						"name": "ReportPageDisplayName",
						"type": "varchar"
					},
					{
						"name": "report_order",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ReportPages"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ReportPages_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQl_DatasetRefreshesLive')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_DatasetRefreshesLive",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "DatasetRefreshesID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DatasetRefreshesSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "RefreshType",
						"type": "varchar"
					},
					{
						"name": "StartTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "EndTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DatasetRefreshes"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_DatasetRefreshesLive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestActivity_DS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestActivityevents",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Sample Datasets"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestActivityevents')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Test_Workspaces",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test_"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Test_Workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_WorkspacesSQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Test_WorkspacesSQL",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Test_"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceDescription",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceType",
						"type": "varchar"
					},
					{
						"name": "IsonDedicatedCapacity",
						"type": "bit"
					},
					{
						"name": "CapacityMigrationStatus",
						"type": "varchar"
					},
					{
						"name": "Status",
						"type": "varchar"
					},
					{
						"name": "IsReadOnly",
						"type": "bit"
					},
					{
						"name": "HasWorkspaceLevelSetting",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "ClientId",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WRDD"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Test_WorkspacesSQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportLive_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ViewReportsLive_SQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ViewReportsLive_SQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportLive_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ViewReportLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReports"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ViewReportLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportsAPI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_API_ViewReports",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_API_ViewReports')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportsHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ViewReportsHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReportHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ViewReportsHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportsStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ViewReports_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReports_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/ViewReports_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "view_report_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {
					"relativeUrl": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/view_report_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ViewReportID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "ViewReportSourceKey",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationID",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserID",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "UserAgent",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityID",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceID",
						"type": "varchar"
					},
					{
						"name": "AppName",
						"type": "varchar"
					},
					{
						"name": "ObjectID",
						"type": "varchar"
					},
					{
						"name": "DatasetID",
						"type": "varchar"
					},
					{
						"name": "ReportID",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSucess",
						"type": "bit"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestID",
						"type": "varchar"
					},
					{
						"name": "ActivityID",
						"type": "varchar"
					},
					{
						"name": "AppReportID",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "AppID",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "bit"
					},
					{
						"name": "ContinuationURL",
						"type": "varchar"
					},
					{
						"name": "ContinuationToken",
						"type": "varchar"
					},
					{
						"name": "lastResultSet",
						"type": "bit"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReports_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Id",
						"type": "varchar"
					},
					{
						"name": "RecordType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CreationTime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "Operation",
						"type": "varchar"
					},
					{
						"name": "OrganizationId",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "int",
						"precision": 10
					},
					{
						"name": "UserKey",
						"type": "varchar"
					},
					{
						"name": "Workload",
						"type": "varchar"
					},
					{
						"name": "UserId",
						"type": "varchar"
					},
					{
						"name": "ClientIP",
						"type": "varchar"
					},
					{
						"name": "Activity",
						"type": "varchar"
					},
					{
						"name": "ItemName",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceName",
						"type": "varchar"
					},
					{
						"name": "DatasetName",
						"type": "varchar"
					},
					{
						"name": "ReportName",
						"type": "varchar"
					},
					{
						"name": "CapacityId",
						"type": "varchar"
					},
					{
						"name": "CapacityName",
						"type": "varchar"
					},
					{
						"name": "WorkspaceId",
						"type": "varchar"
					},
					{
						"name": "ObjectId",
						"type": "varchar"
					},
					{
						"name": "DatasetId",
						"type": "varchar"
					},
					{
						"name": "ReportId",
						"type": "varchar"
					},
					{
						"name": "EmbedTokenId",
						"type": "varchar"
					},
					{
						"name": "ArtifactId",
						"type": "varchar"
					},
					{
						"name": "ArtifactName",
						"type": "varchar"
					},
					{
						"name": "IsSuccess",
						"type": "varchar"
					},
					{
						"name": "ReportType",
						"type": "varchar"
					},
					{
						"name": "RequestId",
						"type": "varchar"
					},
					{
						"name": "ActivityId",
						"type": "varchar"
					},
					{
						"name": "DistributionMethod",
						"type": "varchar"
					},
					{
						"name": "ConsumptionMethod",
						"type": "varchar"
					},
					{
						"name": "ArtifactKind",
						"type": "varchar"
					},
					{
						"name": "RefreshEnforcementPolicy",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "ViewReportHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceApI')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Api_Workspace",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Api_Workspace')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceHistory_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WorkSpaceHistory_Sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpacesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WorkSpaceHistory_Sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceLive_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WorkSpaceLive_SQL_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaces"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WorkSpaceLive_SQL_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WorkSpaceUsersHistory_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceUserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "GroupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "DataLoadTrackerID",
						"type": "nvarchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsersHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WorkSpaceUsersHistory_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WorkSpaceUsersLive_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WorkSpaceUsersLive_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "WorkSpaceUsersStaging_sql_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsers_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/WorkSpaceUsersStaging_sql_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsers_Api_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_API_WorkSpaceUsers",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkspaceID": {
							"value": "@dataset().WorkspaceID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkspaceID": {
						"type": "String"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_API_WorkSpaceUsers')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsers_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "WorkSpaceUserId",
						"type": "int",
						"precision": 10
					},
					{
						"name": "WorkSpaceUserSourceKey",
						"type": "varchar"
					},
					{
						"name": "WorkSpaceID",
						"type": "varchar"
					},
					{
						"name": "EmailAddress",
						"type": "varchar"
					},
					{
						"name": "UserName",
						"type": "varchar"
					},
					{
						"name": "Identifier",
						"type": "varchar"
					},
					{
						"name": "UserType",
						"type": "varchar"
					},
					{
						"name": "GroupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "PrincipalType",
						"type": "varchar"
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedBy",
						"type": "varchar"
					},
					{
						"name": "ModifiedBy",
						"type": "varchar"
					},
					{
						"name": "TenantID",
						"type": "varchar"
					},
					{
						"name": "OrganisationID",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaces"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsers_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emailAddress",
						"type": "varchar"
					},
					{
						"name": "groupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "displayName",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graphId",
						"type": "varchar"
					},
					{
						"name": "principalType",
						"type": "varchar"
					},
					{
						"name": "userType",
						"type": "varchar"
					},
					{
						"name": "group_id",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsersHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsers_Staging_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroupsusers_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"WorkspaceID": {
							"value": "@dataset().WorkspaceID",
							"type": "Expression"
						},
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"WorkspaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "String"
					},
					"AppClientId": {
						"type": "String"
					},
					"AppClientCode": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroupsusers_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesStaging_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DB_UAT",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "Datasets_UAT"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaces_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DB_UAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Live_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_SQL_WorkspacesUsers_Staging",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaceUsers"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_SQL_WorkspacesUsers_Staging')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_API')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_api_ds",
					"type": "LinkedServiceReference",
					"parameters": {
						"AppTenantId": {
							"value": "@dataset().AppTenantId",
							"type": "Expression"
						},
						"AppClientId": {
							"value": "@dataset().AppClientId",
							"type": "Expression"
						},
						"AppClientCode": {
							"value": "@dataset().AppClientCode",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string",
						"defaultValue": "ad3d16d5-9549-4cc7-aa8f-b33f58c57400"
					},
					"AppClientId": {
						"type": "string",
						"defaultValue": "68538a87-365c-42d9-8fc5-44a8582dd437"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_api_ds')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_SQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Sql_Workspacelive",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaces"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Sql_Workspacelive')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_SQL_History')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_sql_WorkspaceHistory",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emailAddress",
						"type": "varchar"
					},
					{
						"name": "groupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "displayName",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graphId",
						"type": "varchar"
					},
					{
						"name": "principalType",
						"type": "varchar"
					},
					{
						"name": "userType",
						"type": "varchar"
					},
					{
						"name": "group_id",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpacesHistory"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_sql_WorkspaceHistory')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_SQL_Staging')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Ls_Sql_Workspaces",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "emailAddress",
						"type": "varchar"
					},
					{
						"name": "groupUserAccessRight",
						"type": "varchar"
					},
					{
						"name": "displayName",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graphId",
						"type": "varchar"
					},
					{
						"name": "principalType",
						"type": "varchar"
					},
					{
						"name": "userType",
						"type": "varchar"
					},
					{
						"name": "group_id",
						"type": "varchar"
					},
					{
						"name": "updatedtime",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "WorkSpaces_Staging"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Ls_Sql_Workspaces')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getcontroltable_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "ID",
						"type": "int",
						"precision": 10
					},
					{
						"name": "RunDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ProcessName",
						"type": "varchar"
					},
					{
						"name": "ProcessStartDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "ProcessEndDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "MaxModifiedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "CreatedDate",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "DeltaLoadProcessingControl"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdatasetrefresh_currenr_api_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdatasetrefresh_currenr_api_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdatasetrefresh_currenr_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdatasets_current_api_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getdatasets_current_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"Created_Date": {
							"value": "@dataset().Created_Date",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"Created_Date": {
						"type": "string",
						"defaultValue": "@activity('Lookup1').output.firstRow.MaxModifiedDate"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getdatasets_current_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getreports_current_api_ds')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getreports_current_api_ls",
					"type": "LinkedServiceReference",
					"parameters": {
						"date": {
							"value": "@dataset().date",
							"type": "Expression"
						}
					}
				},
				"parameters": {
					"date": {
						"type": "string",
						"defaultValue": "@activity('Lookup1').output.firstRow.MaxModifiedDate"
					}
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "RestResource",
				"typeProperties": {},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getreports_current_api_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getusersql_ds_1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "getgroups_sql_ls",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "UBTI Datasets_Dev"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "report_user_access_right",
						"type": "varchar"
					},
					{
						"name": "email_address",
						"type": "varchar"
					},
					{
						"name": "display_name",
						"type": "varchar"
					},
					{
						"name": "identifier",
						"type": "varchar"
					},
					{
						"name": "graph_id",
						"type": "varchar"
					},
					{
						"name": "principal_type",
						"type": "varchar"
					},
					{
						"name": "user_type",
						"type": "varchar"
					},
					{
						"name": "report_id",
						"type": "varchar"
					},
					{
						"name": "updated_time",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "users1"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/getgroups_sql_ls')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ADF_Pipeline_Status_Log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ADF_Pipeline_Status_Log_properties_typeProperties_server')]",
					"database": "[parameters('ADF_Pipeline_Status_Log_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ADF_Pipeline_Status_Log_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ADF_Pipeline_Status_Log_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyValut')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyValut_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault1_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureKeyVault2')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureKeyVault2_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSQLCredentials')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('AzureSQLCredentials_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureSqlDatabaseLS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('AzureSqlDatabaseLS_properties_typeProperties_server')]",
					"database": "[parameters('AzureSqlDatabaseLS_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('AzureSqlDatabaseLS_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureSQLCredentials",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Azure_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Azure_SQL_properties_typeProperties_server')]",
					"database": "[parameters('Azure_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Azure_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BaseURl_LS')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('BaseURl_LS_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('BaseURl_LS_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('BaseURl_LS_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capacities_History')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('Capacities_History_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Capturing Error Message')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Capturing Error Message",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Capturing Error Message_properties_typeProperties_server')]",
					"database": "[parameters('Capturing Error Message_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Capturing Error Message_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Capturing Error Message_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DB_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DB_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DB_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DB_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DB_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowLive_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowRefreshesHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowRefreshesHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowRefreshesHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowRefreshesHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowRefreshesHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowRefreshesLive_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowRefreshesLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowRefreshesLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowRefreshesLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowRefreshesLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowRefreshesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowRefreshesStaging_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowRefreshesStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowRefreshesStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowRefreshesStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowRefreshesStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataflowStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DataflowStaging_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DataflowStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DataflowStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DataflowStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DataflowStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetLive_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetRefreshesHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetRefreshesHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetRefreshesHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetRefreshesHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetRefreshesHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetRefreshesLive_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetRefreshesLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetRefreshesLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetRefreshesLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetRefreshesLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetRefreshesStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetRefreshesStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetRefreshesStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetRefreshesStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetStaging_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetUsersHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetUsersHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetUsersHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetUsersHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetUsersHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "DatasetUsersLive_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetUsersLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetUsersLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetUsersLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetUsersLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsersStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetUsersStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('DatasetUsersStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetUsersStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('DatasetUsersStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetUsers_sql_properties_typeProperties_server')]",
					"database": "[parameters('DatasetUsers_sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetUsers_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureSQLCredentials",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetuserHistory_sql')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('DatasetuserHistory_sql_properties_typeProperties_server')]",
					"database": "[parameters('DatasetuserHistory_sql_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('DatasetuserHistory_sql_properties_typeProperties_userName')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureSQLCredentials",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Execute_ChildPipelineLogs')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Execute_ChildPipelineLogs",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Execute_ChildPipelineLogs_properties_typeProperties_server')]",
					"database": "[parameters('Execute_ChildPipelineLogs_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Execute_ChildPipelineLogs_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Execute_ChildPipelineLogs_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ADF_Pipeline_Status_Log')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_ADF_Pipeline_Status_Log_properties_typeProperties_server')]",
					"database": "[parameters('LS_ADF_Pipeline_Status_Log_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_ADF_Pipeline_Status_Log_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ADF_Pipeline_Status_Log_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_Dataflow')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_Dataflow_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_Dataflow_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_Dataflowrefreshes')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DataFlowID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_Dataflowrefreshes_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_Dataflowrefreshes_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_DatasetUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DatasetID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_DatasetUsers_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_DatasetUsers_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_Datasetrefreshes')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"DatasetID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_Datasetrefreshes_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_Datasetrefreshes_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_Datasets')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_Datasets_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_Datasets_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": " https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_DemoWorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_DemoWorkSpaceUsers_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_DemoWorkSpaceUsers_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('LS_API_DemoWorkSpaceUsers_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_ViewReports')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_ViewReports_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_ViewReports_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_API_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_API_Workspaces_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_API_Workspaces_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('LS_API_Workspaces_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Api_ReportPages')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "String"
					},
					"ReportID": {
						"type": "String"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_Api_ReportPages_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_Api_ReportPages_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": " https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Api_Reports')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('LS_Api_Reports_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('LS_Api_Reports_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Dataloadtracker_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Dataloadtracker_SQL_properties_typeProperties_server')]",
					"database": "[parameters('LS_Dataloadtracker_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Dataloadtracker_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Dataloadtracker_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_Dataloadtracker_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LS_Dataloadtracker_Sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_Dataloadtracker_Sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('LS_Dataloadtracker_Sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_Dataloadtracker_Sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_Dataloadtracker_Sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ExecuteSP_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LS_ExecuteSP_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_ExecuteSP_UAT_properties_typeProperties_server')]",
					"database": "[parameters('LS_ExecuteSP_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_ExecuteSP_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_ExecuteSP_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DataFlowRefeshLive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DataFlowRefeshLive_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DataFlowRefeshLive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DataFlowRefeshLive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DataFlowRefeshLive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DataFlowRefreshLive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DataFlowRefreshLive_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DataFlowRefreshLive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DataFlowRefreshLive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DataFlowRefreshLive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DatasetRefreshesLive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DatasetRefreshesLive_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DatasetRefreshesLive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DatasetRefreshesLive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DatasetRefreshesLive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DatasetRefreshesLive_Staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DatasetRefreshesLive_Staging_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DatasetRefreshesLive_Staging_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DatasetUsersLive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DatasetUsersLive_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DatasetUsersLive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DatasetUsersLive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DatasetUsersLive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DatasetUsers_Live')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DatasetUsers_Live_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DatasetUsers_Live_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DatasetUsers_Live_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DatasetUsers_Live_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DemoWorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DemoWorkSpaceUsers_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DemoWorkSpaceUsers_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_DemoWorkspaces')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_DemoWorkspaces_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_DemoWorkspaces_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_DemoWorkspaces_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_DemoWorkspaces_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_ReportPagesLive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_ReportPagesLive_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_ReportPagesLive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_ReportPagesLive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_ReportPagesLive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_WorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_WorkSpaceUsers_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_WorkSpaceUsers_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_WorkSpaceUsers_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_WorkSpaceUsers_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_WorkSpacesStaging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "LS_SQL_WorkSpacesStaging",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_WorkSpacesStaging_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_WorkSpacesStaging_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_WorkSpacesStaging_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_WorkSpacesStaging_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_SQL_WorkspacesUsers_Staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_server')]",
					"database": "[parameters('LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('LS_SQL_WorkspacesUsers_Staging_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('LS_SQL_WorkspacesUsers_Staging_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_API_WorkSpaceUsers')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkspaceID": {
						"type": "String"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Ls_API_WorkSpaceUsers_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('Ls_API_WorkSpaceUsers_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('Ls_API_WorkSpaceUsers_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Api_Workspace')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Workspace_Tenant2",
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Ls_Api_Workspace_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('Ls_Api_Workspace_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureKeyValut",
							"type": "LinkedServiceReference"
						},
						"secretName": "UBTIClientSecretName"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureKeyValut')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Ds_SQL_ViewReports_Staging')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_server')]",
					"database": "[parameters('Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_Ds_SQL_ViewReports_Staging_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_Ds_SQL_ViewReports_Staging_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Sql_Workspacelive')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_Sql_Workspacelive_properties_typeProperties_server')]",
					"database": "[parameters('Ls_Sql_Workspacelive_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_Sql_Workspacelive_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_Sql_Workspacelive_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_Sql_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_Sql_Workspaces_properties_typeProperties_server')]",
					"database": "[parameters('Ls_Sql_Workspaces_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_Sql_Workspaces_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_Sql_Workspaces_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Ls_sql_WorkspaceHistory')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Ls_sql_WorkspaceHistory_properties_typeProperties_server')]",
					"database": "[parameters('Ls_sql_WorkspaceHistory_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Ls_sql_WorkspaceHistory_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Ls_sql_WorkspaceHistory_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "ReportPagesHistory_sql_UAT",
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportPagesHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportPagesHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportPagesHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportPagesHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportPagesLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportPagesLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportPagesLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportPagesLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPagesStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportPagesStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportPagesStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportPagesStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportPagesStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportPages_SQL_properties_typeProperties_server')]",
					"database": "[parameters('ReportPages_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportPages_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportPages_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportsHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportsHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportsHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportsHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportsLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ReportsLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ReportsLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ReportsLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ReportsLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Rest_workspaces')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Rest_workspaces_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('Rest_workspaces_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('Rest_workspaces_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/f2f4053f-c456-4948-acc7-c85e7841b9d6/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RetriveClientInformation')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('RetriveClientInformation_properties_typeProperties_server')]",
					"database": "[parameters('RetriveClientInformation_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('RetriveClientInformation_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('RetriveClientInformation_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Test_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('Test_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('Test_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestActivityevents')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('TestActivityevents_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('TestActivityevents_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('TestActivityevents_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_Pipeline')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AmazonRdsForSqlServer",
				"typeProperties": {
					"server": "[parameters('Test_Pipeline_properties_typeProperties_server')]",
					"database": "[parameters('Test_Pipeline_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Test_Pipeline_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Test_Pipeline_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_Pipelines')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Test_Pipelines_properties_typeProperties_server')]",
					"database": "[parameters('Test_Pipelines_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Test_Pipelines_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Test_Pipelines_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_Workspaces')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('Test_Workspaces_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('Test_Workspaces_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('Test_Workspaces_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Test_WorkspacesSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Test_WorkspacesSQL_properties_typeProperties_server')]",
					"database": "[parameters('Test_WorkspacesSQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Test_WorkspacesSQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Test_WorkspacesSQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Testing')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('Testing_properties_typeProperties_server')]",
					"database": "[parameters('Testing_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('Testing_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('Testing_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/User Password')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('User Password_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ViewReportLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ViewReportLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ViewReportLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ViewReportLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportsHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ViewReportsHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ViewReportsHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ViewReportsHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ViewReportsHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReportsLive_SQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ViewReportsLive_SQL_properties_typeProperties_server')]",
					"database": "[parameters('ViewReportsLive_SQL_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ViewReportsLive_SQL_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ViewReportsLive_SQL_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('ViewReports_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('ViewReports_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('ViewReports_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('ViewReports_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceHistory_Sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('WorkSpaceHistory_Sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('WorkSpaceHistory_Sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('WorkSpaceHistory_Sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WorkSpaceHistory_Sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceLive_SQL_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('WorkSpaceLive_SQL_UAT_properties_typeProperties_server')]",
					"database": "[parameters('WorkSpaceLive_SQL_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('WorkSpaceLive_SQL_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WorkSpaceLive_SQL_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersHistory_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('WorkSpaceUsersHistory_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WorkSpaceUsersHistory_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersLive_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('WorkSpaceUsersLive_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('WorkSpaceUsersLive_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('WorkSpaceUsersLive_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WorkSpaceUsersLive_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaceUsersStaging_sql_UAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_server')]",
					"database": "[parameters('WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('WorkSpaceUsersStaging_sql_UAT_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('WorkSpaceUsersStaging_sql_UAT_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getCapacities')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getCapacities_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getCapacities_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getCapacities_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getCapacities_')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('getCapacities__connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_Capacities')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('get_Capacities_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_dataset_refrehses_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DatasetID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('get_dataset_refrehses_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('get_dataset_refrehses_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('get_dataset_refrehses_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_refresh_schedules_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DatasetID": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('get_refresh_schedules_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('get_refresh_schedules_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('get_refresh_schedules_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdataflow_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdataflow_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdataflow_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdataflow_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}\n",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdataflow_refreshes_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkSpaceID": {
						"type": "string"
					},
					"DataFlowID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdataflow_refreshes_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdataflow_refreshes_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdataflow_refreshes_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdataset_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdataset_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdataset_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdataset_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdatasetrefresh_currenr_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"starttime": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdatasetrefresh_currenr_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdatasetrefresh_currenr_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdatasetrefresh_currenr_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdatasets_current_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"Created_Date": {
						"type": "string",
						"defaultValue": "@activity('Lookup1').output.firstRow.MaxModifiedDate"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdatasets_current_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdatasets_current_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdatasets_current_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getdatasetusers_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"DatasetID": {
						"type": "string"
					},
					"WorkSpaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getdatasetusers_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getdatasetusers_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getdatasetusers_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getgroups_api_ds')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getgroups_api_ds_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getgroups_api_ds_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getgroups_api_ds_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getgroups_sql_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('getgroups_sql_ls_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureSQLCredentials",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getgroupsusers_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"WorkspaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getgroupsusers_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getgroupsusers_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getgroupsusers_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getrefreshables_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getrefreshables_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getrefreshables_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getrefreshables_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getreport_pages_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ReportID": {
						"type": "string"
					},
					"WorkSpaceID": {
						"type": "string"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getreport_pages_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getreport_pages_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getreport_pages_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getreports_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getreports_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getreports_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getreports_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getreports_current_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"date": {
						"type": "string",
						"defaultValue": "@activity('Lookup1').output.firstRow.MaxModifiedDate"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getreports_current_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getreports_current_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getreports_current_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/getreports_sql_ds')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('getreports_sql_ds_connectionString')]",
					"password": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "AzureSQLCredentials",
							"type": "LinkedServiceReference"
						},
						"secretName": "AzureSQLPassword"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureSQLCredentials')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/getusers_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"ReportID": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('getusers_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": true,
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('getusers_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('getusers_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "https://login.microsoftonline.com/008502d6-3f79-46f0-ab37-9354e3fe80ff/oauth2/v2.0/token",
					"scope": "https://analysis.windows.net/powerbi/api/.default"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/us_capturefirestrowlookup_Ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('us_capturefirestrowlookup_Ls_properties_typeProperties_server')]",
					"database": "[parameters('us_capturefirestrowlookup_Ls_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('us_capturefirestrowlookup_Ls_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('us_capturefirestrowlookup_Ls_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/view_report_api_ls')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "RestService",
				"typeProperties": {
					"url": "[parameters('view_report_api_ls_properties_typeProperties_url')]",
					"enableServerCertificateValidation": "true",
					"authenticationType": "OAuth2ClientCredential",
					"clientId": "[parameters('view_report_api_ls_properties_typeProperties_clientId')]",
					"clientSecret": {
						"type": "SecureString",
						"value": "[parameters('view_report_api_ls_clientSecret')]"
					},
					"tokenEndpoint": "@{concat('https://login.microsoftonline.com/',linkedService().AppTenantId,'/oauth2/v2.0/token')}",
					"scope": "https://analysis.windows.net/powerbi/api/.default",
					"dataFactoryName": "UsageMetricsDF"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Daily 1 PM Data Refresh')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Daily Upsert the data for each Tenant (Organisation)",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Upset Master Pipelines Execution",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2024-11-13T10:13:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								1
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Upset Master Pipelines Execution')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/get_refresh_schedules_dataflow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "RefreshSchedules_API",
								"type": "DatasetReference"
							},
							"name": "source1"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "RefreshSchedules_SQL",
								"type": "DatasetReference"
							},
							"name": "sink1"
						}
					],
					"transformations": [
						{
							"name": "flatten1"
						},
						{
							"name": "flatten2"
						},
						{
							"name": "derivedColumn1"
						}
					],
					"scriptLines": [
						"parameters{",
						"     groupid as string,",
						"     datasetid as string",
						"}",
						"source(output(",
						"          body as ({@odata.context} as string, days as string[], enabled as boolean, localTimeZoneId as string, notifyOption as string, times as string[]),",
						"          headers as [string,string]",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     httpMethod: 'GET',",
						"     timeout: 30,",
						"     requestInterval: 0,",
						"     paginationRules: ['supportRFC5988' -> 'true'],",
						"     responseFormat: ['type' -> 'json', 'documentForm' -> 'arrayOfDocuments']) ~> source1",
						"source1 foldDown(unroll(body.days),",
						"     mapColumn(",
						"          days = body.days,",
						"          enabled = body.enabled,",
						"          localTimeZoneId = body.localTimeZoneId,",
						"          notifyOption = body.notifyOption,",
						"          times = body.times",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten1",
						"flatten1 foldDown(unroll(times),",
						"     mapColumn(",
						"          days,",
						"          enabled,",
						"          localTimeZoneId,",
						"          notifyOption,",
						"          times",
						"     ),",
						"     skipDuplicateMapInputs: false,",
						"     skipDuplicateMapOutputs: false) ~> flatten2",
						"flatten2 derive(groupid = $groupid,",
						"          datasetid = $datasetid) ~> derivedColumn1",
						"derivedColumn1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          index_no as integer,",
						"          dataset_id as string,",
						"          workspace_id as string,",
						"          days as string,",
						"          times as string,",
						"          enabled as string,",
						"          localTimeZoneId as string,",
						"          notifyOption as string,",
						"          updated_time as timestamp",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          dataset_id = datasetid,",
						"          workspace_id = groupid,",
						"          days,",
						"          times,",
						"          enabled,",
						"          localTimeZoneId,",
						"          notifyOption",
						"     )) ~> sink1"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/RefreshSchedules_API')]",
				"[concat(variables('factoryId'), '/datasets/RefreshSchedules_SQL')]"
			]
		}
	]
}