{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ubtiPBIMonitor"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DS_WorkSpacesUsers_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpace Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute_ChildPipelinelogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Workspaces_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceLive_Sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Delete WorkSpaceUsers_Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpace Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute pipeline users",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpacesUsers_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "WorkSpaceUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceUsersStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceUsersHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkspacesUsers",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getreports_sql_ds",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[WorkSpaceUsers_Staging];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Capturing Workspaces Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get WorkSpaces Batch Status",
							"value": {
								"value": "@activity('Get WorkSpace Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Status in WorkSpaces Users History",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkSpaceUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "WorkSpacesUsers History Status",
							"value": {
								"value": "@activity('WorkSpaceUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute_ChildPipelinelogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_UATChildpipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpaceUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Status in WorkSpaces Users History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Workspaces Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute_ChildPipelinelogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Workspaces Status'),'Succeeded'),\nequals(variables('WorkspaceUsers Staging Staus'),'Succeeded')),\nequals(variables('WorkSpaceUserLive Status'),'Succeeded')),\nequals(variables('WorkSpaces Batch'),'Succeeded')),\nequals(variables('WorkSpacesUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Update_UATChildpipelineLogs",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Delete WorkSpaceUsers_Staging",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Sql_DeleteQuery_UAT",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[WorkSpaceUsers_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports_Staging_IST": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"WorkspaceUsers Staging Staus": {
						"type": "String"
					},
					"WorkSpaceUserLive Status": {
						"type": "String"
					},
					"Get Workspaces Status": {
						"type": "String"
					},
					"WorkSpaces Batch": {
						"type": "String"
					},
					"WorkSpacesUsers History Status": {
						"type": "String"
					},
					"Get WorkSpaces Batch Status": {
						"type": "String"
					},
					"ViewReportStaging Status": {
						"type": "String"
					},
					"ViewReport Live Status": {
						"type": "String"
					},
					"ViewReport History Status": {
						"type": "String"
					},
					"Reports Staging Status": {
						"type": "String"
					},
					"Report History Status": {
						"type": "String"
					},
					"Report Live Status": {
						"type": "String"
					},
					"ReportPages Staging Status": {
						"type": "String"
					},
					"Get ReportPages Status": {
						"type": "String"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines_UAT"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ReportPages_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Reports_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ReportsLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Delete ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Delete ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Sql_DeleteQuery_UAT",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[ReportPages_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPagesStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPagesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages History Status",
							"value": {
								"value": "@activity('ReportPages History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages Batch Status",
							"value": {
								"value": "@activity('Get ReportPages in Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_UATChildpipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing ReportPages History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPages Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPage Status'),'Succeeded'),\nequals(variables('ReportPage Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Update_UATChildpipelineLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines_UAT"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DatasetUsers_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Dataset_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Sql_DeleteQuery_UAT",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[DatasetUsers_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DatasetUserID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsersStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUsersHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Datasets Batches Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetUsers History Status",
							"value": {
								"value": "@activity('DatasetUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_UATChildpipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetsUsers Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "CapturingUsers Dataset Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUser Staging Status'),'Succeeded')),\nequals(variables('DatasetUser Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Update_UATChildpipelineLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines_UAT"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DatasetRefreshes_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Dataset_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetRefreshes_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantID": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Refreshes",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Sql_DeleteQuery_UAT",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[DatasetRefreshes_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetRefreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetRefreshesStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetRefreshesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing Get DatasetRefreshes Batches",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get DatasetsRefreshes Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetRefreshes History status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetRefreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetRefreshes History Status",
							"value": {
								"value": "@activity('DatasetRefreshes History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_UATChildpipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetRefreshes History status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetRefreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get DatasetRefreshe Status'),'Succeeded'),\nequals(variables('Dataset Refreshes Staging Status'),'Succeeded')),\nequals(variables('DatasetRefreshes Live Status'),'Succeeded')),\nequals(variables('Get DatasetsRefreshes Status'),'Succeeded')),\nequals(variables('DatasetRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Update_UATChildpipelineLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Dataset Refreshes Staging Status": {
						"type": "String"
					},
					"DatasetRefreshes Live Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines_UAT"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DataFlowRefreshes_Batch_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get DataFlow Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[DataFlows_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataflowLive_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataflow Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get DataFlow Batches').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "If not max batch",
									"type": "IfCondition",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [
										{
											"activity": "Execute Pipeline DataflowRefreshes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(item().BatchNo,activity('Get DataFlow Batches').output.count)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 Hour",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 3600
												}
											}
										]
									}
								},
								{
									"name": "Execute Pipeline DataflowRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataFlowRefreshes_UAT",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataflow Refreshes",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "Sql_DeleteQuery_UAT",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [DataflowRefreshes_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))\n\n\n\n\n\n\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DataFlow Refreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataflowRefreshesStaging_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataflowRefreshesHistory_sql_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing DataflowRefreshes Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Get Dataflowsrefreshes Batch",
							"value": {
								"value": "@activity('Get DataFlow Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowRefreshes History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataFlow Refreshes History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DataflowRefreshes History Status",
							"value": {
								"value": "@activity('DataFlow Refreshes History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_UATChildpipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DataflowRefreshes History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DataFlow Refreshes History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Dataflowsrefreshes Status'),'Succeeded'),\nequals(variables('DataflowRefreshes Staging Status'),'Succeeded')),\nequals(variables('DataflowRefreshesLive Status'),'Succeeded')),\nequals(variables('Get Dataflowsrefreshes Batch'),'Succeeded')),\nequals(variables('DataflowRefreshes History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "Update_UATChildpipelineLogs",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Staging Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines_UAT"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_DatasetUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Dataset_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[DatasetUsers_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Datasets Batches Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetUsers History Status",
							"value": {
								"value": "@activity('DatasetUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetsUsers Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "CapturingUsers Dataset Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUser Staging Status'),'Succeeded')),\nequals(variables('DatasetUser Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ReportPages_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Reports_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Delete ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_ReportPages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Delete ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[ReportPages_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages History Status",
							"value": {
								"value": "@activity('ReportPages History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages Batch Status",
							"value": {
								"value": "@activity('Get ReportPages in Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing ReportPages History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPages Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPage Status'),'Succeeded'),\nequals(variables('ReportPage Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleChildPipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataFlowRefreshes_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get DataFlow Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo FROM \n[dbo].[DataFlows_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataflow Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get DataFlow Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If not max batch",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Execute Pipeline DataflowRefreshes",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@less(item().BatchNo,activity('Get DataFlow Batches').output.count)",
											"type": "Expression"
										},
										"ifTrueActivities": [
											{
												"name": "Wait 1 Hour",
												"type": "Wait",
												"dependsOn": [],
												"userProperties": [],
												"typeProperties": {
													"waitTimeInSeconds": 3600
												}
											}
										]
									}
								},
								{
									"name": "Execute Pipeline DataflowRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DataFlowRefreshes_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataflow Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get DataFlow Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].DataflowRefreshes;"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DataFlow Refreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowRefreshesSourcekey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlowRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Refreshes",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetRefreshes",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetRefreshes_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Refreshes",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetRefreshes];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetRefreshes History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetRefreshesSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RefreshType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "StartTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "EndTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetRefreshes_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetRefreshes_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers_Staging];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Datasets Batches Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetUsers History Status",
							"value": {
								"value": "@activity('DatasetUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetsUsers Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "CapturingUsers Dataset Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUser Staging Status'),'Succeeded')),\nequals(variables('DatasetUser Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Dataset_batch] \nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FT_DatasetUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLogs",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Dataset_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FT_DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[DatasetUsers_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "DatasetUserID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "DataLoadTrackerID",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "CapturingUsers Dataset Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Datasets Batches Status",
							"value": {
								"value": "@activity('Get Dataset Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetsUsers Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "DatasetUsers History Status",
							"value": {
								"value": "@activity('DatasetUsers History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLogs",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing DatasetsUsers Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "DatasetUsers History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "CapturingUsers Dataset Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLogs').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get Datasets Status'),'Succeeded'),\nequals(variables('DatasetUser Staging Status'),'Succeeded')),\nequals(variables('DatasetUser Live Status'),'Succeeded')),\nequals(variables('Datasets Batches Status'),'Succeeded')),\nequals(variables('DatasetUsers History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FirstTimeLoadchildPipeline"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FT_ReportPages_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('SELECT DISTINCT BatchNo, TenantId \nFROM [dbo].[Reports_batch] \nWHERE TenantId = ', string(pipeline().parameters.TenantId), \n' ORDER BY 1')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Delete ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "FT_ReportPages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Delete ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "@concat('DELETE  [dbo].[ReportPages_Staging]\nWHERE TenantId  = ', string(pipeline().parameters.TenantId))\n",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages History Status",
							"value": {
								"value": "@activity('ReportPages History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages Batch Status",
							"value": {
								"value": "@activity('Get ReportPages in Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing ReportPages History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPages Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPage Status'),'Succeeded'),\nequals(variables('ReportPage Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FirstTimeLoadchildPipeline"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipeline_UAT')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Reports_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ReportPages_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Datasets_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetUsers_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlows_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DatasetRefreshes_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "DataFlowRefreshes_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp_Dataloadtracker",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
							"storedProcedureParameters": {
								"AppClientId": {
									"value": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppClientSecret": {
									"value": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppTentantId": {
									"value": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"CreatedDate": {
									"value": "",
									"type": "DateTime"
								},
								"CurrentStatus": {
									"value": "Started",
									"type": "String"
								},
								"DataLoadTrackerId": {
									"value": "",
									"type": "String"
								},
								"IsFirstTimeLoad": {
									"value": "",
									"type": "Boolean"
								},
								"ModifiedDate": {
									"value": "",
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": "",
									"type": "String"
								},
								"ProcessEndTime": {
									"value": "",
									"type": "DateTime"
								},
								"ProcessStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"Status": {
									"value": "",
									"type": "String"
								},
								"TentantId": {
									"value": "",
									"type": "Int32"
								},
								"TriggerType": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "ViewReports_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch_UAT",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Capturing Workspaces_Master status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Workspaces Status",
							"value": {
								"value": "@activity('Workspaces_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasetsrefresh Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetfreshes status",
							"value": {
								"value": "@activity('Datasetrefresh_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Dataflows Status",
							"value": {
								"value": "@activity('Dataflows_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasets Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasets Status",
							"value": {
								"value": "@activity('Datasets_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportsMaster status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Report status",
							"value": {
								"value": "@activity('Reports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Call_UpdateStatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing Workspaces_Master status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportsMaster status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Datasets Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Master Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Update]",
							"storedProcedureParameters": {
								"DataLoadTrackerID": {
									"value": {
										"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(and(and(and(and(and(\nequals(variables('Master Workspaces Status'),'Succeeded'),\nequals(variables('Master WorkSpaceUsers Status'),'Succeeded')),\nequals(variables('Master Report status'),'Succeeded')),\nequals(variables('Master ReportPages Status'),'Succeeded')),\nequals(variables('Master Datasets Status'),'Succeeded')),\nequals(variables('Master Datasetusers Status'),'Succeeded')),\nequals(variables('Master Datasetfreshes status'),'Succeeded')),\nequals(variables('Master Dataflows Status'),'Succeeded')),\nequals(variables('Master DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Master Viewreports Status'),'Succeeded')),\n'Succeeded','Success')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_Sql_UAT",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "LS_ExecuteSP_UAT",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Capturing WorkSpaceUsers Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master WorkSpaceUsers Status",
							"value": {
								"value": "@activity('WorkspaceUsers__Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPagesMaster Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master ReportPages Status",
							"value": {
								"value": "@activity('ReportPages_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetUsersMaster Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetusers Status",
							"value": {
								"value": "@activity('Datasetusers_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Viewreports Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Viewreports Status",
							"value": {
								"value": "@activity('ViewReports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowsRefreshes Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master DataflowRefreshes Status",
							"value": {
								"value": "@activity('DataflowRefreshes_Master').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					},
					"Result": {
						"type": "String",
						"defaultValue": "Success"
					},
					"a": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_UAT Master"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Execute ChildPipelineLog",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@pipeline().parameters.AppTenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@pipeline().parameters.AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@pipeline().parameters.AppClientCode",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@pipeline().parameters.TenantId",
												"type": "Expression"
											},
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE[dbo].[ReportPages_Staging];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Capturing ReportPages History Status",
						"type": "SetVariable",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages History Status",
							"value": {
								"value": "@activity('ReportPages History').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPages Batches Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "ReportPages Batch Status",
							"value": {
								"value": "@activity('Get ReportPages in Batches').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Execute ChildPipelineLog",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat (\n    'EXEC [dbo].[sp_ChildPipelineLog_Insert] ',\n    '''', 'Started', '''', ',',\n    '''', pipeline().Pipeline, '''', ',',\n    '''', pipeline().RunId, '''', ',',\n    '''', convertTimeZone(utcnow(),'UTC','India Standard Time'), '''', ',',\n    '''', '', '''', ',',\n    '''', pipeline().TriggerName, '''', ',',\n    '''', pipeline().TriggerType, '''', ',',\n    '''', pipeline().TriggerTime, '''', ',',\n    '''', ' ', '''', ',',\n    '''', pipeline().parameters.TenantId, '''', ',',\n    '''', ' ', '''', ',',\n    '''', ' ', ''''\n)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Execute_ChildPipelineLogs",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Capturing ReportPages History Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages History",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPages Batches Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_ChildPipelineLog_Update]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"LogTrackerID": {
									"value": {
										"value": "@activity('Execute ChildPipelineLog').output.firstRow.LogTrackerID",
										"type": "Expression"
									},
									"type": "String"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(\nequals(variables('Get ReportPage Status'),'Succeeded'),\nequals(variables('ReportPage Staging Status'),'Succeeded')),\nequals(variables('ReportPages Live Status'),'Succeeded')),\nequals(variables('ReportPages Batch Status'),'Succeeded')),\nequals(variables('ReportPages History Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "string"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages Batch Status": {
						"type": "String"
					},
					"ReportPages History Status": {
						"type": "String"
					},
					"DatasetUsers Staging Status": {
						"type": "String"
					},
					"DatasetUsers Live Status": {
						"type": "String"
					},
					"Datasets Batches Status": {
						"type": "String"
					},
					"DatasetUsers History Status": {
						"type": "String"
					},
					"Get Datasets Status": {
						"type": "String"
					},
					"Dataset staging Status": {
						"type": "String"
					},
					"Dataset Live Status": {
						"type": "String"
					},
					"Dataset History Status": {
						"type": "String"
					},
					"Get DatasetRefreshes Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Batch Status": {
						"type": "String"
					},
					"DatasetRefreshes History Status": {
						"type": "String"
					},
					"Dataflows Staging Status": {
						"type": "String"
					},
					"Dataflows Live Status": {
						"type": "String"
					},
					"Dataflows History Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Status": {
						"type": "String"
					},
					"Get Dataflowsrefreshes Batch": {
						"type": "String"
					},
					"DataflowRefreshes History Status": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"Get ReportPage Status": {
						"type": "String"
					},
					"ReportPage Staging Status": {
						"type": "String"
					},
					"ReportPages Live Status": {
						"type": "String"
					},
					"DatasetUser Staging Status": {
						"type": "String"
					},
					"DatasetUser Live Status": {
						"type": "String"
					},
					"Get DatasetRefreshes_ Status": {
						"type": "String"
					},
					"Get DatasetRefreshe Status": {
						"type": "String"
					},
					"Get DatasetsRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshesLive Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ReportPages];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceUsers_RunStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_WorkspacesUsers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineName": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').output",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_adf_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve_Client_Value",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TenantId,AppClientId,AppTenantId,AppClientSecret,CreatedAt from [dbo].[ClientInformation] \nORDER BY CreatedAt DESC\nOFFSET 0 ROWS FETCH NEXT 1 ROW \nONLY;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Azure_Sql",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IterateClientValue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "RetrieveClientValue",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('RetrieveClientValue').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "ExecutePipelineTestWorkspace",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpaces_Tenant2",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"TenantId": {
												"value": "@item().TenantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppTenantId": {
												"value": "@item().AppTenantId",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "RetrieveClientValue",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select TenantId,AppClientId,AppTenantId,AppClientSecret,CreatedAt from [dbo].[ClientInformation] \nORDER BY CreatedAt DESC\nOFFSET 0 ROWS FETCH NEXT 1 ROW \nONLY;",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "RetriveClientInformation",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"clientID": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"AppClientId": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DailyScheduleMasterPipeline_V1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup the ClientInformation for DailySchedule Pipeline",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select AppTentantId,AppClientId,AppClientSecret,TentantId from [dbo].[DataLoadTracker]",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_lookupClientInformation",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Capturing ClientInformation",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Lookup the ClientInformation for DailySchedule Pipeline",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup the ClientInformation for DailySchedule Pipeline').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "DS_Workspaces_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Insert Log",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_WorkSpaces",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing Workspaces_Master status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Workspaces_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Workspaces Status",
										"value": {
											"value": "@activity('DS_Workspaces_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_WorkspaceUsers__Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Workspaces_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_WorkSpacesUsers_Batch",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing WorkSpaceUsers Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_WorkspaceUsers__Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master WorkSpaceUsers Status",
										"value": {
											"value": "@activity('DS_WorkspaceUsers__Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_Reports_Master",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_Reports",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing ReportsMaster status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Reports_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Report status",
										"value": {
											"value": "@activity('DS_Reports_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_ReportPages_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Reports_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_ReportPages_Batch",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing ReportPagesMaster Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_ReportPages_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master ReportPages Status",
										"value": {
											"value": "@activity('DS_ReportPages_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_Datasets_Master",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_Datasets",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing Datasets Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Datasets_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Datasets Status",
										"value": {
											"value": "@activity('DS_Datasets_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_Datasetusers_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Datasets_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_DatasetUsers_Batch",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing DatasetUsersMaster Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Datasetusers_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Datasetusers Status",
										"value": {
											"value": "@activity('DS_Datasetusers_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_Datasetrefresh_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Datasets_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_DatasetRefreshes_Batch",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing Datasetsrefresh Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Datasetrefresh_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Datasetfreshes status",
										"value": {
											"value": "@activity('DS_Datasetrefresh_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_ViewReports_Master",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_ViewReports",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing Viewreports Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_ViewReports_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Viewreports Status",
										"value": {
											"value": "@activity('DS_ViewReports_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_Dataflows_Master",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_DataFlows",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing Dataflows Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_Dataflows_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master Dataflows Status",
										"value": {
											"value": "@activity('DS_Dataflows_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_DataflowRefreshes_Master",
									"type": "ExecutePipeline",
									"dependsOn": [
										{
											"activity": "DS_Dataflows_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DS_DataFlowRefreshes_Batch",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"AppTenantId": {
												"value": "@item().AppTentantId",
												"type": "Expression"
											},
											"AppClientId": {
												"value": "@item().AppClientId",
												"type": "Expression"
											},
											"AppClientCode": {
												"value": "@item().AppClientSecret",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TentantId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "DS_Capturing DataflowsRefreshes Master Status",
									"type": "SetVariable",
									"dependsOn": [
										{
											"activity": "DS_DataflowRefreshes_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Master DataflowRefreshes Status",
										"value": {
											"value": "@activity('DS_DataflowRefreshes_Master').Status",
											"type": "Expression"
										}
									}
								},
								{
									"name": "DS_sp_Dataloadtracker",
									"type": "SqlServerStoredProcedure",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
										"storedProcedureParameters": {
											"AppClientId": {
												"value": {
													"value": "@item().AppClientId",
													"type": "Expression"
												},
												"type": "String"
											},
											"AppClientSecret": {
												"value": {
													"value": "@item().AppClientSecret",
													"type": "Expression"
												},
												"type": "String"
											},
											"AppTentantId": {
												"value": {
													"value": "@item().AppTentantId",
													"type": "Expression"
												},
												"type": "String"
											},
											"CreatedDate": {
												"value": "",
												"type": "DateTime"
											},
											"CurrentStatus": {
												"value": "Started",
												"type": "String"
											},
											"DataLoadTrackerId": {
												"value": "",
												"type": "String"
											},
											"IsFirstTimeLoad": {
												"value": "",
												"type": "Boolean"
											},
											"ModifiedDate": {
												"value": "",
												"type": "DateTime"
											},
											"PipelineRunId": {
												"value": "",
												"type": "String"
											},
											"ProcessEndTime": {
												"value": "",
												"type": "DateTime"
											},
											"ProcessStartTime": {
												"value": "",
												"type": "DateTime"
											},
											"Status": {
												"value": "",
												"type": "String"
											},
											"TentantId": {
												"value": "",
												"type": "Int32"
											},
											"TriggerType": {
												"value": "",
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "LS_Dataloadtracker_SQL",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "DS_Insert Log",
									"type": "Lookup",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('EXEC [dbo].[DS_DataLoadTrackInsert] ','''',item().AppTentantId,''',''',item().AppClientId,''',''',item().AppClientSecret,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(item().TentantId),''','' ''')",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"dataset": {
											"referenceName": "DS_InsertSP",
											"type": "DatasetReference",
											"parameters": {}
										}
									}
								},
								{
									"name": "DS_SP_Call_UpdateStatus",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [
										{
											"activity": "DS_Capturing DatasetUsersMaster Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing Datasetsrefresh Master Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing DataflowsRefreshes Master Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing Viewreports Master Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing Dataflows Master Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing Datasets Master Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing ReportPagesMaster Status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Capturing ReportsMaster status",
											"dependencyConditions": [
												"Completed"
											]
										},
										{
											"activity": "DS_Workspaces_Master",
											"dependencyConditions": [
												"Completed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[DS_DataLoadTrack_Update]",
										"storedProcedureParameters": {
											"DataLoadTrackerID": {
												"value": {
													"value": "@activity('DS_Insert Log').output.firstRow.DataLoadTrackerId",
													"type": "Expression"
												},
												"type": "String"
											},
											"ProcessEndTime": {
												"value": {
													"value": "@utcNow()",
													"type": "Expression"
												},
												"type": "DateTime"
											},
											"Status": {
												"value": {
													"value": "@if(and(and(and(and(and(and(and(and(and(\nequals(variables('Master Workspaces Status'),'Succeeded'),\nequals(variables('Master WorkSpaceUsers Status'),'Succeeded')),\nequals(variables('Master Report status'),'Succeeded')),\nequals(variables('Master ReportPages Status'),'Succeeded')),\nequals(variables('Master Datasets Status'),'Succeeded')),\nequals(variables('Master Datasetusers Status'),'Succeeded')),\nequals(variables('Master Datasetfreshes status'),'Succeeded')),\nequals(variables('Master Dataflows Status'),'Succeeded')),\nequals(variables('Master DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Master Viewreports Status'),'Succeeded')),\n'Succeeded','Failed')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "DS_updateLog_SP",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					},
					"Result": {
						"type": "String",
						"defaultValue": "Success"
					},
					"a": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "DailyScheduleMasterPipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/DS_ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/DS_DatasetUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/FirstTimeLoadMasterPipelineV1_0')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Reports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_Reports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "ReportPages_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_ReportPages_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasets_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_Datasets",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetusers_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_DatasetUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Dataflows_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_DataFlows",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Datasetrefresh_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_DatasetRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "DataflowRefreshes_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_DataFlowRefreshes_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "sp_Dataloadtracker",
						"type": "SqlServerStoredProcedure",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Insert]",
							"storedProcedureParameters": {
								"AppClientId": {
									"value": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppClientSecret": {
									"value": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									},
									"type": "String"
								},
								"AppTentantId": {
									"value": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"CreatedDate": {
									"value": "",
									"type": "DateTime"
								},
								"CurrentStatus": {
									"value": "Started",
									"type": "String"
								},
								"DataLoadTrackerId": {
									"value": "",
									"type": "String"
								},
								"IsFirstTimeLoad": {
									"value": "",
									"type": "Boolean"
								},
								"ModifiedDate": {
									"value": "",
									"type": "DateTime"
								},
								"PipelineRunId": {
									"value": "",
									"type": "String"
								},
								"ProcessEndTime": {
									"value": "",
									"type": "DateTime"
								},
								"ProcessStartTime": {
									"value": "",
									"type": "DateTime"
								},
								"Status": {
									"value": "",
									"type": "String"
								},
								"TentantId": {
									"value": "",
									"type": "Int32"
								},
								"TriggerType": {
									"value": "",
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ViewReports_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Execute_SP",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_ViewReports",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkspaceUsers__Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "FT_WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": false,
							"parameters": {
								"AppTenantId": {
									"value": "@pipeline().parameters.AppTenantId",
									"type": "Expression"
								},
								"AppClientId": {
									"value": "@pipeline().parameters.AppClientId",
									"type": "Expression"
								},
								"AppClientCode": {
									"value": "@pipeline().parameters.AppClientCode",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "Capturing Workspaces_Master status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Workspaces Status",
							"value": {
								"value": "@activity('Workspaces_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasetsrefresh Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetfreshes status",
							"value": {
								"value": "@activity('Datasetrefresh_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Dataflows Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Dataflows Status",
							"value": {
								"value": "@activity('Dataflows_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Datasets Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasets Status",
							"value": {
								"value": "@activity('Datasets_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportsMaster status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Report status",
							"value": {
								"value": "@activity('Reports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SP_Call_UpdateStatus",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "Capturing Workspaces_Master status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing WorkSpaceUsers Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Dataflows Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportsMaster status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Viewreports Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Reports_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasets_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Datasetrefresh_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Dataflows_Master",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing Datasetsrefresh Master Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing DatasetUsersMaster Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing ReportPagesMaster Status",
								"dependencyConditions": [
									"Completed"
								]
							},
							{
								"activity": "Capturing DataflowsRefreshes Master Status",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[DataLoadTrack_Update]",
							"storedProcedureParameters": {
								"DataLoadTrackerID": {
									"value": {
										"value": "@activity('Execute_SP').output.firstRow.DataLoadTrackerId",
										"type": "Expression"
									},
									"type": "String"
								},
								"ProcessEndTime": {
									"value": {
										"value": "@utcNow()",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@if(and(and(and(and(and(and(and(and(and(\nequals(variables('Master Workspaces Status'),'Succeeded'),\nequals(variables('Master WorkSpaceUsers Status'),'Succeeded')),\nequals(variables('Master Report status'),'Succeeded')),\nequals(variables('Master ReportPages Status'),'Succeeded')),\nequals(variables('Master Datasets Status'),'Succeeded')),\nequals(variables('Master Datasetusers Status'),'Succeeded')),\nequals(variables('Master Datasetfreshes status'),'Succeeded')),\nequals(variables('Master Dataflows Status'),'Succeeded')),\nequals(variables('Master DataflowRefreshes Status'),'Succeeded')),\nequals(variables('Master Viewreports Status'),'Succeeded')),\n'Succeeded','Failed')",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "LS_Dataloadtracker_SQL",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Execute_SP",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('EXEC [dbo].[DataLoadTrack_Insert] ','''',pipeline().parameters.AppTenantId,''',''',pipeline().parameters.AppClientId,''',''',pipeline().parameters.AppClientCode,''',''',pipeline().RunId,''',''',utcNow(),''','' '',','''Started'',','''Started'',','''True'',','''Application'',', '''',utcNow(),''',',''' '',','''',string(pipeline().parameters.TenantId),''','' ''')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSQL_SP",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "Capturing WorkSpaceUsers Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "WorkspaceUsers__Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master WorkSpaceUsers Status",
							"value": {
								"value": "@activity('WorkspaceUsers__Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing ReportPagesMaster Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ReportPages_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master ReportPages Status",
							"value": {
								"value": "@activity('ReportPages_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DatasetUsersMaster Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "Datasetusers_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Datasetusers Status",
							"value": {
								"value": "@activity('Datasetusers_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing Viewreports Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "ViewReports_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master Viewreports Status",
							"value": {
								"value": "@activity('ViewReports_Master').Status",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Capturing DataflowsRefreshes Master Status",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "DataflowRefreshes_Master",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "Master DataflowRefreshes Status",
							"value": {
								"value": "@activity('DataflowRefreshes_Master').Status",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LogID": {
						"type": "Integer"
					},
					"Result": {
						"type": "String",
						"defaultValue": "Success"
					},
					"a": {
						"type": "String"
					},
					"Master Workspaces Status": {
						"type": "String"
					},
					"Master WorkSpaceUsers Status": {
						"type": "String"
					},
					"Master Report status": {
						"type": "String"
					},
					"Master ReportPages Status": {
						"type": "String"
					},
					"Master Datasets Status": {
						"type": "String"
					},
					"Master Datasetfreshes status": {
						"type": "String"
					},
					"Master Datasetusers Status": {
						"type": "String"
					},
					"Master Viewreports Status": {
						"type": "String"
					},
					"Master Dataflows Status": {
						"type": "String"
					},
					"Master DataflowRefreshes Status": {
						"type": "String"
					},
					"DataflowRefreshes Status": {
						"type": "String"
					}
				},
				"folder": {
					"name": "FirstTimeLoadMasterPipeline"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/FT_ReportPages_Batch')]",
				"[concat(variables('factoryId'), '/pipelines/FT_DatasetUsers_Batch')]"
			]
		}
	]
}