{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ubtiPBIMonitor"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Dataset Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \r\nFROM [dbo].[Dataset_batch] \r\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Dataset Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline DatasetUsers",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "DatasetUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Dataset Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[DatasetUsers];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "DatasetUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetUsers_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DatasetUserHistory_sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateways_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Gateways Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Gateways_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Gateway_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate Dataset Users",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Gateways Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline Gateway",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "Gateways",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate Dataset Users",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get Gateways Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[Gateways];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "Gateway History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "GatewayID",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "GatewayID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "GatewaySourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GatewaySourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Gateway",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Gateway",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GatewayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GatewayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Type",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Exponent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Exponent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Modulus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Modulus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Gateway_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "GatewayHistory_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/RefreshSchedules')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Refresh Schedule Dataflow",
									"type": "ExecuteDataFlow",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"dataflow": {
											"referenceName": "get_refresh_schedules_dataflow",
											"type": "DataFlowReference",
											"parameters": {
												"groupid": {
													"value": "'@{item().Workspaceid}'",
													"type": "Expression"
												},
												"datasetid": {
													"value": "'@{item().DatasetSourceKey}'",
													"type": "Expression"
												}
											},
											"datasetParameters": {
												"source1": {
													"WorkSpaceID": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													},
													"DatasetID": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												"sink1": {}
											}
										},
										"staging": {},
										"compute": {
											"coreCount": 8,
											"computeType": "General"
										},
										"traceLevel": "Fine"
									}
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get ReportPages in Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT DISTINCT BatchNo \nFROM [dbo].[Reports_batch]\nORDER BY 1",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate ReportPages",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get ReportPages in Batches').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Execute Pipeline ReportPages",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "ReportPages",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "Truncate ReportPages",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get ReportPages in Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getgroups_sql_ls",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[ReportPages];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					},
					{
						"name": "ReportPages History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportPageDisplayName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "report_order",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ReportPages_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ReportPages_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Batch')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpace Batches",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select distinct BatchNo from [dbo].[Workspaces_batch] ",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "For Each Batch",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Truncate WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpace Batches').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Execute pipeline users",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpacesUsers",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"BatchNo": {
												"value": "@item().BatchNo",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "WorkSpaceUsers History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "For Each Batch",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceUserId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WorkSpaceUserId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceUserSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "EmailAddress",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Identifier",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "GroupUserAccessRight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "PrincipalType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaceUsers_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Truncate WorkspacesUsers",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Get WorkSpace Batches",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "getreports_sql_ds",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": "TRUNCATE TABLE [dbo].[WorkSpaceUser];"
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports_Staging_IST": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_adf_orchestration')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve_Client_Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IterateClientValue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve_Client_Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve_Client_Value').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 4,
							"activities": [
								{
									"name": "ExecutePipelineTestWorkspace",
									"type": "ExecutePipeline",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpaces",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ClientId": {
												"value": "@item().ClientId",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TenantId",
												"type": "Expression"
											},
											"AZSecretName": {
												"value": "@item().AZSecretName",
												"type": "Expression"
											},
											"OrganisationId": {
												"value": "@item().OrganisationId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Web_Activity",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"content-type": {
												"value": "application/json",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelines/',pipeline().parameters.PipelineName,'/createRun?api-version=2018-06-01')",
											"type": "Expression"
										},
										"body": {
											"value": "@pipeline().parameters.PipelineName",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "a683694f-e3fc-4cd0-8f1d-b63f8ff20604"
					},
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "ubti-d-wind-PBIMonitor"
					},
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "ubtiPBIMonitor"
					},
					"PipelineName": {
						"type": "string",
						"defaultValue": "Test_WorkspacesAPI"
					}
				},
				"variables": {
					"clientID": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_adf_orchestration_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve_Client_Value",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlTableDS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "IterateClientValue",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve_Client_Value",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve_Client_Value').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 4,
							"activities": [
								{
									"name": "ExecutePipelineTestWorkspace",
									"type": "ExecutePipeline",
									"state": "Inactive",
									"onInactiveMarkAs": "Succeeded",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "WorkSpaces",
											"type": "PipelineReference"
										},
										"waitOnCompletion": false,
										"parameters": {
											"ClientId": {
												"value": "@item().ClientId",
												"type": "Expression"
											},
											"TenantId": {
												"value": "@item().TenantId",
												"type": "Expression"
											},
											"AZSecretName": {
												"value": "@item().AZSecretName",
												"type": "Expression"
											},
											"OrganisationId": {
												"value": "@item().OrganisationId",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "Web_Activity",
									"type": "WebActivity",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"method": "POST",
										"headers": {
											"content-type": {
												"value": "application/json",
												"type": "Expression"
											}
										},
										"url": {
											"value": "@concat('https://management.azure.com/subscriptions/',pipeline().parameters.SubscriptionID,'/resourceGroups/',pipeline().parameters.ResourceGroup,'/providers/Microsoft.DataFactory/factories/',pipeline().DataFactory,'/pipelines/',pipeline().parameters.PipelineName,'/createRun?api-version=2018-06-01')",
											"type": "Expression"
										},
										"body": {
											"value": "{}",
											"type": "Expression"
										},
										"authentication": {
											"type": "MSI",
											"resource": "https://management.azure.com/"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"SubscriptionID": {
						"type": "string",
						"defaultValue": "a683694f-e3fc-4cd0-8f1d-b63f8ff20604"
					},
					"ResourceGroup": {
						"type": "string",
						"defaultValue": "ubti-d-wind-PBIMonitor"
					},
					"DataFactoryName": {
						"type": "string",
						"defaultValue": "ubtiPBIMonitor"
					},
					"PipelineName": {
						"type": "string"
					}
				},
				"variables": {
					"clientID": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/MWorkspaces')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Workspaces_Master",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpaces",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"ClientId": {
									"value": "@pipeline().parameters.ClientId",
									"type": "Expression"
								},
								"TenantId": {
									"value": "@pipeline().parameters.TenantId",
									"type": "Expression"
								},
								"AZSecretName": {
									"value": "@pipeline().parameters.AZSecretName",
									"type": "Expression"
								},
								"OrganisationId": {
									"value": "@pipeline().parameters.OrganisationId",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "WorkspacesUsers_Master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Workspaces_Master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"ClientId": {
						"type": "String",
						"defaultValue": "6077f1b3-2daf-4b4f-9dc7-f6126cf209be"
					},
					"TenantId": {
						"type": "String",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"AZSecretName": {
						"type": "String",
						"defaultValue": "UBTIClientSecretName"
					},
					"OrganisationId": {
						"type": "String",
						"defaultValue": "001"
					}
				},
				"folder": {
					"name": "Master Pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkspaceUsers_RunStatus')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Execute_WorkspacesUsers",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "WorkSpacesUsers_Batch",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineName": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').output",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Execute_WorkspacesUsers",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Execute_WorkspacesUsers').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/WorkSpacesUsers_Batch')]"
			]
		}
	]
}