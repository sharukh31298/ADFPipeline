{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "ubtiPBIMonitor"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DataFlows_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DataFlow Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Dataflows_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['objectId']"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "Description",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlowsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Dataflows]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DataflowSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "DataFlow History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DataflowName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Description",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DataFlow_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DataFlow_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('DataFlow Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "DataFlow Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('DataFlow Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('DataFlow Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Datasets]')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetRefreshes Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['requestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['id']"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshes_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantID": {
						"type": "int"
					}
				},
				"variables": {
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetRefreshes_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Dataset_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get DatasetRefreshes Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "$['value'][0]['requestId']"
													},
													"sink": {
														"name": "RequestId",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['id']"
													},
													"sink": {
														"name": "DatasetRefreshesSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshType']"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['startTime']"
													},
													"sink": {
														"name": "StartTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['endTime']"
													},
													"sink": {
														"name": "EndTime",
														"type": "DateTime"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['status']"
													},
													"sink": {
														"name": "Status",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['value'][0]['refreshAttempts'][0]"
													},
													"sink": {
														"name": "RefreshType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetRefreshesAPI",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetRefreshes_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantID": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Datasets]')",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Dataset Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasetUserAccessRight']"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsers_sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DatasetUsers_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkspaceId,DatasetSourceKey from [dbo].[Dataset_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "DatasetID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Dataset Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkspaceId",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasetUserAccessRight']"
													},
													"sink": {
														"name": "DatasetUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "DatasetUsersAPI",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"DatasetID": {
													"value": "@item().DatasetSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "DatasetUsers_sql",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasets')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].Datasets_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['addRowsAPIEnabled']"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRefreshable']"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRolesRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['targetStorageMode']"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDate']"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['contentProviderType']"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createReportEmbedURL']"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['qnaEmbedURL']"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isInPlaceSharingEnabled']"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['autoSyncReadOnlyReplicas']"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['maxReadOnlyReplicas']"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DatasetSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Dataset Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasets_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Dataset Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table [dbo].Datasets_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['addRowsAPIEnabled']"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['configuredBy']"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isRefreshable']"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isEffectiveIdentityRolesRequired']"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['targetStorageMode']"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createdDate']"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['contentProviderType']"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['createReportEmbedURL']"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['qnaEmbedURL']"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isInPlaceSharingEnabled']"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['autoSyncReadOnlyReplicas']"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['queryScaleOutSettings']['maxReadOnlyReplicas']"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "DatasetsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate table Datasets",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"DatasetSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Dataset History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "AddRowsAPIEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConfiguredBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsRefreshable",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsEffectiveIdentityRolesRequired",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "TargetStorageMode",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContentProviderType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreateReportEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "QNAEmbedURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsInPlaceSharingEnabled",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AutoSyncReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "MaxReadOnlyReplicas",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Dataset_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dataset_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Dataset Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Dataset Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Dataset Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Datasources')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Datasets",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select Datasetsourcekey, WorkspaceID from datasets",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Datasets').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Datasources",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourcekey",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['datasourceType']"
													},
													"sink": {
														"name": "DatasourceType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['path']"
													},
													"sink": {
														"name": "ConnectionPath",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['kind']"
													},
													"sink": {
														"name": "Kind",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['url']"
													},
													"sink": {
														"name": "ConnectionURL",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['server']"
													},
													"sink": {
														"name": "Server",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['connectionDetails']['database']"
													},
													"sink": {
														"name": "Database",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['datasourceId']"
													},
													"sink": {
														"name": "DataSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayId']"
													},
													"sink": {
														"name": "GatewayID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "APIs_Datasets",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@{concat('/v1.0/myorg/groups/',item().WorkspaceID,'/datasets/',item().DatasetSourcekey,'/datasources')}\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Datasources_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Datasets').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Datasets",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Datasets').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Gateways')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Data",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select DatasetSourceKey,WorkspaceId from [dbo].[Gateway_batch] where BatchNo=',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Dataset_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Data').output.value",
								"type": "Expression"
							},
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Gateways",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "DatasetID",
													"value": {
														"value": "@item().DatasetSourcekey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkspaceID",
													"value": {
														"value": "@item().WorkspaceID",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['id']"
													},
													"sink": {
														"name": "GatewaySourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayId']"
													},
													"sink": {
														"name": "GatewayID",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "GatewayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['type']"
													},
													"sink": {
														"name": "Type",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['publicKey']['exponent']"
													},
													"sink": {
														"name": "Exponent",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['publicKey']['modulus']"
													},
													"sink": {
														"name": "Modulus",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['gatewayAnnotation']"
													},
													"sink": {
														"name": "GatewayAnnotation",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['@odata.context']"
													},
													"sink": {}
												},
												{
													"source": {
														"path": "$['DatasetID']"
													},
													"sink": {
														"name": "DatasetID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkspaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "APIs_Datasets",
											"type": "DatasetReference",
											"parameters": {
												"RelativeURL": {
													"value": "@{concat('/v1.0/myorg/groups/',item().WorkspaceID,'/datasets/',item().DatasetSourcekey,'/Default.DiscoverGateways')}\n",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Gateways_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ReportSourceKey,WorkspaceId from [dbo].[Reports]')\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Report Page Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Reportid",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceid",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['order']"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Reportid']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceid']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPages_API",
											"type": "DatasetReference",
											"parameters": {
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												},
												"WorkSpaceID": {
													"value": "@item().WorkSpaceID",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPages_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Reports').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportPages_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select ReportSourceKey,WorkspaceId from [dbo].[Reports_batch] where BatchNo=',pipeline().parameters.BatchNo)\n",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get Report Page Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "Reportid",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "WorkSpaceid",
													"value": {
														"value": "@item().WorkSpaceID",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['name']"
													},
													"sink": {
														"name": "ReportPageName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "ReportPageDisplayName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['order']"
													},
													"sink": {
														"name": "report_order",
														"type": "Int32"
													}
												},
												{
													"source": {
														"path": "$['Reportid']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceid']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportPagesAPI_Tenant2",
											"type": "DatasetReference",
											"parameters": {
												"WorkSpaceID": {
													"value": "@item().WorkspaceId",
													"type": "Expression"
												},
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ReportPages_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Reports').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string"
					},
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"CountWorkspace": {
						"type": "Integer"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ReportUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Reports",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "select ReportSourceKey from [dbo].[Reports]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ReportID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Reports').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"activities": [
								{
									"name": "Get ReportUsers Details",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 2,
										"retryIntervalInSeconds": 60,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "ReportID",
													"value": {
														"value": "@item().ReportSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												},
												{
													"name": "OrganisationId",
													"value": {
														"value": "@pipeline().parameters.OrganisationId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"preCopyScript": "Truncate Table [dbo].[ReportUsers]",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['reportUserAccessRight']"
													},
													"sink": {
														"name": "ReportUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "ReportUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['ReportID']"
													},
													"sink": {
														"name": "ReportID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['OrganisationId']"
													},
													"sink": {
														"name": "OrganisationID",
														"type": "String"
													}
												}
											],
											"collectionReference": "$['value']"
										}
									},
									"inputs": [
										{
											"referenceName": "ReportUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"ReportID": {
													"value": "@item().ReportSourceKey",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "GetReportUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get Reports",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get Reports').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get Reports').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "string",
						"defaultValue": "008502d6-3f79-46f0-ab37-9354e3fe80ff"
					},
					"OrganisationId": {
						"type": "string",
						"defaultValue": "001"
					}
				},
				"variables": {
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_DEV RunStatus"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Reports Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Reports Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Reports_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Reports Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.Reports_Staging;",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['reportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['webUrl']"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['embedUrl']"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['datasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['workspaceId']"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_API_Tenant2",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[Reports]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Report History Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportWebUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportEmbedUrl",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "Reports_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Reports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Reports Staging",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Reports Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Reports Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Activity Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ViewReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportLive_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "View Activity History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('View Activity Live Data').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View Activity Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.ViewReports_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityId']"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityName']"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactKind']"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshEnforcementPolicy']"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['continuationUri']"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastResultSet']"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']"
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_API",
								"type": "DatasetReference",
								"parameters": {
									"AppTenantId": {
										"value": "@pipeline().parameters.AppTenantId",
										"type": "Expression"
									},
									"AppClientId": {
										"value": "@pipeline().parameters.AppClientId",
										"type": "Expression"
									},
									"AppClientCode": {
										"value": "@pipeline().parameters.AppClientCode",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Checking data Avalability inViewReports_Staging",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "Ls_ds_ViewRports_staging",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"LastRefreshedTime": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T09:03:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ViewReports_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "View Activity Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "TRUNCATE TABLE [dbo].[ViewReports]",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"ViewReportSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReportLive_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "View Activity History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "View Activity Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Operation",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Workload",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "UserAgent",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Activity",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ItemName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ReportType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "RequestID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppReportID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "AppID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "View Activity History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantID",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "View Activity Live Data",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('View Activity Live Data').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('View Activity Live Data').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "View Activity Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantID",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"AbsoluteUrl": "$['continuationUri']"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "Truncate Table dbo.ViewReports_Staging",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['Id']"
										},
										"sink": {
											"name": "ViewReportSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RecordType']"
										},
										"sink": {
											"name": "RecordType",
											"type": "Int32"
										}
									},
									{
										"source": {
											"path": "[['CreationTime']"
										},
										"sink": {
											"name": "CreationTime",
											"type": "DateTime"
										}
									},
									{
										"source": {
											"path": "[['Operation']"
										},
										"sink": {
											"name": "Operation",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['OrganizationId']"
										},
										"sink": {
											"name": "OrganizationID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserType']"
										},
										"sink": {
											"name": "UserType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserKey']"
										},
										"sink": {
											"name": "UserKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Workload']"
										},
										"sink": {
											"name": "Workload",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['UserId']"
										},
										"sink": {
											"name": "UserID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ClientIP']"
										},
										"sink": {
											"name": "ClientIP",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['Activity']"
										},
										"sink": {
											"name": "Activity",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ItemName']"
										},
										"sink": {
											"name": "ItemName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkSpaceName']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetName']"
										},
										"sink": {
											"name": "DatasetName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportName']"
										},
										"sink": {
											"name": "ReportName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityId']"
										},
										"sink": {
											"name": "CapacityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['CapacityName']"
										},
										"sink": {
											"name": "CapacityName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['WorkspaceId']"
										},
										"sink": {
											"name": "WorkspaceID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ObjectId']"
										},
										"sink": {
											"name": "ObjectID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DatasetId']"
										},
										"sink": {
											"name": "DatasetID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ReportId']"
										},
										"sink": {
											"name": "ReportID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactId']"
										},
										"sink": {
											"name": "ArtifactId",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactName']"
										},
										"sink": {
											"name": "ArtifactName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['IsSuccess']"
										},
										"sink": {
											"name": "IsSucess",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['ReportType']"
										},
										"sink": {
											"name": "ReportType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RequestId']"
										},
										"sink": {
											"name": "RequestID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ActivityId']"
										},
										"sink": {
											"name": "ActivityID",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['DistributionMethod']"
										},
										"sink": {
											"name": "DistributionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ConsumptionMethod']"
										},
										"sink": {
											"name": "ConsumptionMethod",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['ArtifactKind']"
										},
										"sink": {
											"name": "ArtifactKind",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['RefreshEnforcementPolicy']"
										},
										"sink": {
											"name": "RefreshEnforcementPolicy",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "$['continuationUri']"
										},
										"sink": {
											"name": "ContinuationURL",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['continuationToken']"
										},
										"sink": {
											"name": "ContinuationToken",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['lastResultSet']"
										},
										"sink": {
											"name": "lastResultSet",
											"type": "Boolean"
										}
									}
								],
								"collectionReference": "$['activityEventEntities']"
							}
						},
						"inputs": [
							{
								"referenceName": "ViewReportsAPI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ViewReports_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantID": {
						"type": "int",
						"defaultValue": 5
					}
				},
				"variables": {
					"LastRefreshedTime": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T09:03:18Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpaces",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces]' )",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "WorkSpace ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get WorkSpace Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['userType']"
													},
													"sink": {
														"name": "UserType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsers_API",
											"type": "DatasetReference",
											"parameters": {
												"WorkspaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get WorkSpaces').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "UBTI_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpacesUsers_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get WorkSpaces",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "@concat('select WorkSpaceSourceKey from [dbo].[Workspaces_batch] where BatchNo =',pipeline().parameters.BatchNo)",
									"type": "Expression"
								},
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "WorkSpace ID in Loop",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get WorkSpaces').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 50,
							"activities": [
								{
									"name": "Get WorkSpace Users",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "RestSource",
											"additionalColumns": [
												{
													"name": "WorkSpaceID",
													"value": {
														"value": "@item().WorkSpaceSourceKey",
														"type": "Expression"
													}
												},
												{
													"name": "TenantId",
													"value": {
														"value": "@pipeline().parameters.TenantId",
														"type": "Expression"
													}
												}
											],
											"httpRequestTimeout": "00:01:40",
											"requestInterval": "00.00:00:00.010",
											"requestMethod": "GET",
											"paginationRules": {
												"supportRFC5988": "true"
											}
										},
										"sink": {
											"type": "AzureSqlSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false,
											"disableMetricsCollection": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"mappings": [
												{
													"source": {
														"path": "[['emailAddress']"
													},
													"sink": {
														"name": "EmailAddress",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['groupUserAccessRight']"
													},
													"sink": {
														"name": "GroupUserAccessRight",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['displayName']"
													},
													"sink": {
														"name": "UserName",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['identifier']"
													},
													"sink": {
														"name": "Identifier",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['principalType']"
													},
													"sink": {
														"name": "PrincipalType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['graphId']"
													},
													"sink": {
														"name": "WorkSpaceUserSourceKey",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "[['userType']"
													},
													"sink": {
														"name": "UserType",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['WorkSpaceID']"
													},
													"sink": {
														"name": "WorkSpaceID",
														"type": "String"
													}
												},
												{
													"source": {
														"path": "$['TenantId']"
													},
													"sink": {
														"name": "TenantId",
														"type": "Int32"
													}
												}
											],
											"collectionReference": "$['value']",
											"mapComplexValuesToString": true
										}
									},
									"inputs": [
										{
											"referenceName": "WorkSpaceUsers_Api_Tenant2",
											"type": "DatasetReference",
											"parameters": {
												"WorkspaceID": {
													"value": "@item().WorkSpaceSourceKey",
													"type": "Expression"
												},
												"AppTenantId": {
													"value": "@pipeline().parameters.AppTenantId",
													"type": "Expression"
												},
												"AppClientId": {
													"value": "@pipeline().parameters.AppClientId",
													"type": "Expression"
												},
												"AppClientCode": {
													"value": "@pipeline().parameters.AppClientCode",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "WorkSpaceUsers_SQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					},
					{
						"name": "Sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Get WorkSpaces",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace ID in Loop",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')\n",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Get WorkSpaces').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Get WorkSpaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"BatchNo": {
						"type": "string",
						"defaultValue": "1"
					},
					"AppTenantId": {
						"type": "string"
					},
					"AppClientId": {
						"type": "string"
					},
					"AppClientCode": {
						"type": "string"
					},
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T06:27:10Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/WorkSpaces_Tenant2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "WorkSpace Staging",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"additionalColumns": [
									{
										"name": "TenantId",
										"value": {
											"value": "@pipeline().parameters.TenantId",
											"type": "Expression"
										}
									}
								],
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": "\n\n",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"dataIntegrationUnits": 4,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['description']"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "$['TenantId']"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32"
										}
									}
								],
								"collectionReference": "$['value']",
								"mapComplexValuesToString": false
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaceApI",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace Live Data",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"WorkSpaceSourceKey"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "WorkSpace History",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "WorkSpaceId",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceDescription",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "Status",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean",
											"physicalType": "bit"
										}
									},
									{
										"source": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "CreatedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "DateTime",
											"physicalType": "datetime"
										}
									},
									{
										"source": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "CreatedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										},
										"sink": {
											"name": "ModifiedBy",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										},
										"sink": {
											"name": "TenantId",
											"type": "Int32",
											"physicalType": "int"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "WorkSpaces_SQL_Staging",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "WorkSpaces_SQL_History",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "sp_TrackProcessSuccess",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": "NA",
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('WorkSpace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sp_TrackProcessFailure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "WorkSpace Staging",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace Live Data",
								"dependencyConditions": [
									"Failed"
								]
							},
							{
								"activity": "WorkSpace History",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"ErrorMessage": {
									"value": {
										"value": "@activity('Workspace Staging').error?.message",
										"type": "Expression"
									},
									"type": "String"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Workspace Staging').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								},
								"TenantID": {
									"value": {
										"value": "@pipeline().parameters.TenantId",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"concurrency": 2,
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TenantId": {
						"type": "int"
					}
				},
				"variables": {
					"Workspaces_Status": {
						"type": "String"
					},
					"Workspaces_StartTime": {
						"type": "String"
					},
					"Workspaces_EndTime": {
						"type": "String"
					},
					"Workspaces_IST": {
						"type": "String"
					},
					"Workspaces_IST2": {
						"type": "String"
					},
					"WorkSpaceUsers_Status": {
						"type": "String"
					},
					"WorkSpaceUsers_StartTime": {
						"type": "String"
					},
					"WorkSpaceUsers_EndTime": {
						"type": "String"
					},
					"WorkSpacesUsers_IST": {
						"type": "String"
					},
					"WorkSpacesUsers_IST2": {
						"type": "String"
					},
					"Reports_Staging_Status": {
						"type": "String"
					},
					"Reports Staging_StartTime": {
						"type": "String"
					},
					"Reports Staging_Execution EndTime": {
						"type": "String"
					},
					"Reports Staging_IST2": {
						"type": "String"
					},
					"Reports Staging_IST": {
						"type": "String"
					},
					"ReportPages_Status": {
						"type": "String"
					},
					"ReportPages_StartTime": {
						"type": "String"
					},
					"ReportPages_IST": {
						"type": "String"
					},
					"ReportPages_IST2": {
						"type": "String"
					},
					"ReportPages_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_Status": {
						"type": "String"
					},
					"RefreshSchedules": {
						"type": "String"
					},
					"RefreshSchedules_EndTime": {
						"type": "String"
					},
					"RefreshSchedules_IST": {
						"type": "String"
					},
					"RefreshSchedules_IST2": {
						"type": "String"
					},
					"ReportUsers_Status": {
						"type": "String"
					},
					"ReportUsers_StartTime": {
						"type": "String"
					},
					"ReportUsers_EndTime": {
						"type": "String"
					},
					"ReportUsers_IST": {
						"type": "String"
					},
					"ReportUsers_IST2": {
						"type": "String"
					},
					"Datasources_Status": {
						"type": "String"
					},
					"Datasources_StartTime": {
						"type": "String"
					},
					"Datasources_EndTime": {
						"type": "String"
					},
					"Datasources_IST": {
						"type": "String"
					},
					"Datasources_IST2": {
						"type": "String"
					},
					"DatasetUsers_Status": {
						"type": "String"
					},
					"DatasetUsers_StartTime": {
						"type": "String"
					},
					"DatasetUsers_EndTime": {
						"type": "String"
					},
					"DatasetUsers_IST": {
						"type": "String"
					},
					"DatasetUsers_IST2": {
						"type": "String"
					},
					"Datasets_status": {
						"type": "String"
					},
					"Datasets_startTime": {
						"type": "String"
					},
					"Datasets_EndTime": {
						"type": "String"
					},
					"Datasets_IST": {
						"type": "String"
					},
					"Datasets_IST2": {
						"type": "String"
					},
					"DatasetsRefreshes_status": {
						"type": "String"
					},
					"DatasetsRefreshes_StartTime": {
						"type": "String"
					},
					"DatasetsRefreshes_EndTime": {
						"type": "String"
					},
					"DatasetsRefreshes_IST": {
						"type": "String"
					},
					"DatasetsRefreshes_IST2": {
						"type": "String"
					},
					"DataFlows_Status": {
						"type": "String"
					},
					"DataFlows_StartTime": {
						"type": "String"
					},
					"DataFlows_EndTime": {
						"type": "String"
					},
					"DataFlows_IST": {
						"type": "String"
					},
					"DataFlows_IST2": {
						"type": "String"
					},
					"DataFlowRefreshes_Status": {
						"type": "String"
					},
					"DataFlowRefreshes_StartTime": {
						"type": "String"
					},
					"DataFlowRefreshes_EndTime": {
						"type": "String"
					},
					"DataFlowRefreshes_IST": {
						"type": "String"
					},
					"DataFlowRefreshes_IST2": {
						"type": "String"
					},
					"ViewReports_Status": {
						"type": "String"
					},
					"ViewReports_StartTime": {
						"type": "String"
					},
					"ViewReports_EndTime": {
						"type": "String"
					},
					"ViewReports_IST": {
						"type": "String"
					},
					"ViewReports_IST2": {
						"type": "String"
					},
					"PipelinesStatus": {
						"type": "String"
					},
					"PipelineStartTime": {
						"type": "String"
					},
					"PipelineEndTime": {
						"type": "String"
					},
					"InProgress Status": {
						"type": "String",
						"defaultValue": "InProgress"
					},
					"LID": {
						"type": "Integer"
					},
					"LogID": {
						"type": "Integer"
					}
				},
				"folder": {
					"name": "PowerPulseApp_Dev"
				},
				"annotations": [],
				"lastPublishTime": "2023-11-29T05:26:21Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Test_Workspaces",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "RestSource",
								"httpRequestTimeout": "00:01:40",
								"requestInterval": "00.00:00:00.010",
								"requestMethod": "GET",
								"paginationRules": {
									"supportRFC5988": "true"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"path": "[['id']"
										},
										"sink": {
											"name": "WorkSpaceSourceKey",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['isReadOnly']"
										},
										"sink": {
											"name": "IsReadOnly",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['isOnDedicatedCapacity']"
										},
										"sink": {
											"name": "IsonDedicatedCapacity",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['capacityMigrationStatus']"
										},
										"sink": {
											"name": "CapacityMigrationStatus",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['type']"
										},
										"sink": {
											"name": "WorkSpaceType",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['state']"
										},
										"sink": {
											"name": "Status",
											"type": "String"
										}
									},
									{
										"source": {
											"path": "[['hasWorkspaceLevelSettings ']"
										},
										"sink": {
											"name": "HasWorkspaceLevelSetting",
											"type": "Boolean"
										}
									},
									{
										"source": {
											"path": "[['name']"
										},
										"sink": {
											"name": "WorkSpaceName",
											"type": "String"
										}
									}
								],
								"collectionReference": "$['value']"
							}
						},
						"inputs": [
							{
								"referenceName": "Rest_Workspaces",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Azure_Sql",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					},
					{
						"name": "Storedprocedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Test_Workspaces",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[usp_LogADF_PipelineExecution]",
							"storedProcedureParameters": {
								"EndTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"PipelineName": {
									"value": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"type": "String"
								},
								"RunID": {
									"value": {
										"value": "@pipeline().RunId",
										"type": "Expression"
									},
									"type": "String"
								},
								"StartTime": {
									"value": {
										"value": "@convertTimeZone(utcnow(),'UTC','India Standard Time')",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"Status": {
									"value": {
										"value": "@activity('Test_Workspaces').Status",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerName": {
									"value": {
										"value": "@pipeline().TriggerName",
										"type": "Expression"
									},
									"type": "String"
								},
								"TriggerTime": {
									"value": {
										"value": "@pipeline().TriggerTime",
										"type": "Expression"
									},
									"type": "DateTime"
								},
								"TriggerType": {
									"value": {
										"value": "@pipeline().TriggerType",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "ADF_Pipeline_Status_Log",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "Sample Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}